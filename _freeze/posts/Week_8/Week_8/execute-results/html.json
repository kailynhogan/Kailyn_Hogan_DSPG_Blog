{
  "hash": "33f57840fefe6d922ef9d32c4b495ee9",
  "result": {
    "markdown": "---\ntitle: \"Week Eight of Data Science for the Public Good\"\nsubtitle: \"It is hustle time!\"\nauthor: \"Kailyn Hogan\"\ndate: \"2023-07-07\"\ncategories: [Week Eight, R, Demographic Analysis, Demographic Profile]\n---\n\n\n## Demographic Profile\n\nI began editing the Demographic Profile I made two weeks ago this week. I went back and added comments to my code, added regional and national context to the plots, and started converting some of the data into percentages. Below is the work I completed.\n\n### Population Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(ggthemes)\nlibrary(scales)\n\n\n### The first thing we want to visualize is population change.\n\n# 1. Population Change                                                          \n\n# Define the variables before getting the data.\n# The Census API code for total population for 2000 and 2010 is P001001.\npop00 <- c(\"pop\" = \"P001001\")\npop10 <- c(\"pop\" = \"P001001\")\n# The API code for total population changed for 2020.\n# The Census API code for total population is P1_001N for 2020. \npop20 <- c(\"pop\" = \"P1_001N\")\n\n###\n## National Context: nationPop\n# Getting 2000 total population data for the USA.\nnation00 <- get_decennial(geography = \"us\",\n                          year = 2000,\n                          variable = pop00,\n                          output = \"wide\") %>% \n  mutate(year = 2000)\n# Getting 2010 total population data for the USA.\nnation10 <- get_decennial(geography = \"us\",\n                          year = 2010,\n                          variable = pop10,\n                          output = \"wide\") %>% \n  mutate(year = 2010)\n# Getting 2020 total population data for the USA.\nnation20 <- get_decennial(geography = \"us\",\n                          year = 2020,\n                          variable = pop20,\n                          output = \"wide\") %>% \n  mutate(year = 2020)\n# Bind the years together using bind_rows to create data frame for national context. \nnationPop <- nation20 %>% \n  bind_rows(nation10,nation00) %>% \n  mutate(geography = \"Nation\") \n\n\n###\n## Regional Context: regionPop\n# Getting 2000 total population data from the Midwest.\nregion00 <- get_decennial(geography = \"region\",\n                          year = 2000,\n                          variable = pop00,\n                          output = \"wide\") %>% \n  mutate(year = 2000)\n# Getting 2010 total population data for the Midwest.\nregion10 <- get_decennial(geography = \"region\",\n                          year = 2010,\n                          variable = pop10,\n                          output = \"wide\") %>% \n  mutate(year = 2010)\n# Getting 2020 total population data for the Midwest.\nregion20 <- get_decennial(geography = \"region\",\n                          year = 2020,\n                          variable = pop20,\n                          output = \"wide\") %>% \n  mutate(year = 2020)\n# Bind the years together using bind_rows to create data frame for regional context. \n# Filter to keep just the Midwest Region. \nregionPop <- region20 %>% \n  bind_rows(region10,region00) %>% \n  filter(NAME == \"Midwest Region\") %>% \n  mutate(NAME = str_remove(NAME, \" Region\")) %>% # Use str_remove() to remove \" Region\" from Midwest. \n  mutate(geography = \"Region\")\n\n\n###\n## State Context: statePop\n# Getting the 2000 total population data for the state of Iowa from the Decennial Census.\niowa00 <- get_decennial(geography = \"state\",\n                        state = \"IA\",\n                        year = 2000,\n                        output = \"wide\",\n                        variable = pop00) %>% \n  mutate(year = 2000)\n# Getting the 2010 total population data for the state of Iowa from the Decennial Census.\niowa10 <- get_decennial(geography = \"state\",\n                        state = \"IA\",\n                        variable = pop10,\n                        year = 2010,\n                        output = \"wide\") %>% \n  mutate(year = 2010)\n# Getting the 2020 total population data for the state of Iowa from the Decennial Census.\niowa20 <- get_decennial(geography = \"state\",\n                        state = \"IA\",\n                        variable = pop20,\n                        year = 2020,\n                        output = \"wide\") %>% \n  mutate(year = 2020)\n\n# Bind the years together using bind_rows to create data frame for state context. \nstatePop <- iowa20 %>% \n  bind_rows(iowa10,iowa00) %>% \n  mutate(geography = \"State\")\n\n\n###\n## Places: \n# Getting 2000 total population data for all places in Iowa.\nplace00 <- get_decennial(geography = \"place\",\n                         state = \"IA\",\n                         year = 2000,\n                         output = \"wide\",\n                         variables = pop00) %>% \n  mutate(year = 2000)\nplace10 <- get_decennial(geography = \"place\",\n                         state = \"IA\",\n                         year = 2010,\n                         output = \"wide\",\n                         variables = pop10) %>% \n  mutate(year = 2010)\nplace20 <- get_decennial(geography = \"place\",\n                         state = \"IA\",\n                         variable = pop20,\n                         year = 2020,\n                         output = \"wide\") %>% \n  mutate(year = 2020)\n# Bind the years together using bind_rows() to create data frame for all places in Iowa. \nplacePop <- place20 %>% \n  bind_rows(place10,place00) %>% \n  mutate(geography = \"Place\")\n\n# Filter for Independence, Grundy Center, and New Hampton. \nplacePop <- placePop[placePop$NAME %in% c(\"Grundy Center city, Iowa\", \"Independence city, Iowa\", \"New Hampton city, Iowa\"), ] %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\")) # Use str_remove() to remove \"city, Iowa\" from behind the place names. \n\n# Combine nationPop, regionPop, statePop, and placePop using bind_rows().\npopulation <- nationPop %>% \n  bind_rows(regionPop,statePop,placePop)\n\n# Calculate the change in population.\npopulation <- population %>%\n  group_by(NAME) %>%\n  arrange(year) %>%\n  mutate(pop_change = pop - lag(pop)) \n\n\n\n\n# Start visualizing total population now that master data frame is created. \n\n\n# Plot the change in total population for Independence.                           PLOT\n# Filter population for Independence.\npopulation %>% \n  filter(NAME == \"Independence\") %>% \n  ggplot(aes(x = year, y = pop))+\n  geom_line()+\n  geom_point(size = 2)+\n  geom_text(aes(label = scales::comma(pop)), hjust = -.31)+\n  scale_y_continuous(label = scales::comma)+\n  scale_x_continuous(limits = c(1997, 2023),\n                     breaks = c(2000,2010,2020))+\n  theme_fivethirtyeight()+\n  theme(legend.position = \"bottom\")+\n  labs(title = \"Change in Total Population\",\n       subtitle = \"Independence, Iowa\",\n       y = \"Population\",\n       x = \"\",\n       color = \"\", \n       caption = \"2000-2020 Decennial Census\")\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Plot the change in total population for New Hampton.                           PLOT\n# Filter population for New Hampton.\npopulation %>% \n  filter(NAME == \"New Hampton\") %>% \n  ggplot(aes(x = year, y = pop))+\n  geom_line()+\n  geom_point(size = 2)+\n  geom_text(aes(label = scales::comma(pop)),hjust = -.3)+ \n  scale_y_continuous(label = scales::comma)+\n  scale_x_continuous(limits = c(1997, 2023),\n                     breaks = c(2000,2010,2020))+\n  theme_fivethirtyeight()+\n  theme(legend.position = \"bottom\")+\n  labs(title = \"Change in Total Population\",\n       subtitle = \"New Hampton, Iowa\",\n       y = \"Population\",\n       x = \"\",\n       color = \"\", \n       caption = \"2000-2020 Decennial Census\")\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Plot the change in total population Grundy Center.                              PLOT\n# Filter population for Grundy Center.\npopulation %>% \n  filter(NAME == \"Grundy Center\") %>% \n  ggplot(aes(x = year, y = pop))+\n  geom_line()+\n  geom_point(size = 2)+\n  geom_text(aes(label = scales::comma(pop)),hjust = -.3)+\n  scale_y_continuous(label = scales::comma)+\n  scale_x_continuous(limits = c(1997, 2023),\n                     breaks = c(2000,2010,2020))+\n  theme_fivethirtyeight()+\n  theme(legend.position = \"bottom\")+\n  labs(title = \"Change in Total Population\",\n       subtitle = \"Grundy Center, Iowa\",\n       y = \"Population\",\n       x = \"\",\n       color = \"\", \n       caption = \"2000-2020 Decennial Census\")\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# Plot total population for all cities.                                           PLOT    \n# Filter for the cities. \n# Assign the plot to an object.\npopulation[population$NAME %in% c(\"Grundy Center\", \"Independence\", \"New Hampton\"), ] %>% \n  ggplot(aes(x = year, y = pop, group = NAME))+\n  geom_line(aes(color = NAME), linewidth = 1)+\n  geom_point(size = 2)+\n  geom_text(aes(label = scales::comma(pop_change)),vjust = -1)+\n  scale_y_continuous(label = scales::comma,\n                     limits = c(2500,6300))+\n  scale_x_continuous(limits = c(1998, 2022),\n                     breaks = c(2000,2010,2020))+\n  theme_fivethirtyeight()+\n  theme(legend.position = \"bottom\")+\n  labs(title = \"Change in Total Population\",\n       subtitle = \"2000-2020 Decennial Census\",\n       y = \"Population\",\n       x = \"\",\n       color = \"\", \n       caption = \"Variables: P1_001N and P001001\")\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-2-4.png){width=672}\n:::\n\n```{.r .cell-code}\n## Plot change in total population with line type = NAME.                           PLOT\npopulation[population$NAME %in% c(\"Grundy Center\", \"Independence\", \"New Hampton\"), ] %>% \n  ggplot(aes(x = year, y = pop, group = NAME, linetype = NAME))+\n  geom_line()+\n  geom_point(size = 2)+\n  geom_text(aes(label = scales::comma(pop)),vjust = -1)+  \n  scale_y_continuous(label = scales::comma,\n                     limits = c(2500,6500))+\n  scale_x_continuous(limits = c(1998, 2022),\n                     breaks = c(2000,2010,2020))+\n  theme_fivethirtyeight()+\n  theme(legend.position = \"bottom\")+\n  labs(title = \"Change in Total Population\",\n       subtitle = \"Comparison between Grundy Center, Independence,\\nand New Hampton\",\n       y = \"Population\",\n       x = \"\",\n       color = \"\", \n       linetype = \"\",\n       caption = \"2000-2020 Decennial Census\")\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-2-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Plot total population for all geographies.                                      PLOT\n# Assign the plot to an object.\npopulation %>% \n  ggplot(aes(x = year, y = pop, group = NAME)) +\n  geom_line(aes(linetype = geography, color = NAME), linewidth = 1)+\n  geom_point(size = 2)+\n  scale_y_log10(label = scales::comma) +\n  scale_x_continuous(limits = c(2000, 2020),\n                     breaks = c(2000,2010,2020))+\n  theme_fivethirtyeight()+\n  theme(legend.position = \"bottom\")+\n  labs(title = \"Change in Total Population\",\n       y = \"Population (log scale)\",\n       subtitle = \"2000-2020 Decennial Census\",\n       x = \"\",\n       color = \"\", \n       linetype = \"\",\n       caption = \"Variables: P1_001N and P001001\")\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-2-6.png){width=672}\n:::\n\n```{.r .cell-code}\n# The next thing we want to visualize is the PERCENT CHANGE in population.\n# 2. Percent Population Change                                                  \n\n# Create anew column called prc_change.\n# Group by \"NAME\" so that the calculations occur individually for each place. \n# Percent change is calculated by subtracting year2 from year1 and dividing by year2. \npopulation <- population %>%\n  group_by(NAME) %>%\n  mutate(prc_change = case_when(\n    year == 2000 ~ NA,\n    year == 2010 ~ (pop - lag(pop, n = 10, default = last(pop))) / lag(pop, n = 10, default = last(pop)),\n    year == 2020 ~ (pop - lag(pop, n = 20, default = last(pop))) / lag(pop, n = 20, default = last(pop))\n  ))\n\n# Create a grouping column in the population data\npopulation <- population %>%\n  mutate(grouping = ifelse(NAME %in% c(\"United States\", \"Midwest\", \"Iowa\"), \"Contextual Area\", \"Places\"))\n\n\n## Plot the percent change in population for all geographies.                    PLOT\n# Assign the plot to an object.\npopulation %>% \n  ggplot(aes(x = year, y = prc_change, group = NAME)) +\n  geom_line(aes(color = NAME, linetype = grouping), linewidth = 1) +\n  geom_text(aes(x= 2020.65, y = .1777, label = \"17.77%\"), size = 3.5) +\n  geom_text(aes(x= 2020.65, y = .09023, label = \"9.02%\"), vjust = -.2, size = 3.5) +\n  geom_text(aes(x= 2020.65, y = .07132, label = \"7.13%\"), vjust = 1.2, size = 3.5) +\n  geom_text(aes(x= 2020.65, y = .0770416, label = \"7.70%\"), size = 3.5, vjust = -.000002) +\n  geom_text(aes(x= 2020.65, y = .0083139, label = \"0.83%\"), size = 3.5) +\n  geom_text(aes(x= 2020.65, y = -.053629, label = \"-5.36%\"), size = 3.5) +\n  geom_point(size = 2) +\n  scale_y_continuous(label = scales::percent) +\n  scale_x_continuous(breaks = c(2010, 2015,2020), limits = c(2010,2021)) +\n  theme_fivethirtyeight() +\n  theme(strip.text = element_text(face = \"bold\"))+\n  labs(title = \"Percent Change in Total Population\",\n       subtitle = \"2000-2020 Decennial Census\",\n       color = \"\",\n       caption = \"Variables: P1_001N and P001001\",\n       linetype = \"\") \n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-2-7.png){width=672}\n:::\n\n```{.r .cell-code}\n## Plot the percent change in total population for just the places.\n# Filter the population data frame for places. \n# Assign the plot to an object.\npopulation[population$NAME %in% c(\"Grundy Center\", \"Independence\", \"New Hampton\"), ] %>% \n  ggplot(aes(x = year, y = prc_change, group = NAME)) +\n  geom_line(aes(color = NAME), linewidth = 1) +\n  geom_point(size = 2) +\n  geom_text(aes(label = scales::percent(prc_change)), hjust = .5,vjust = -.75 )+\n  scale_y_continuous(label = scales::percent, limits = c(-.06,.085)) +\n  scale_x_continuous(breaks = c(2010,2015, 2020), limits = c(2008, 2022)) +\n  theme_fivethirtyeight() +\n  theme(strip.text = element_text(face = \"bold\"),\n        legend.position = \"bottom\")+  # Align legend to the right\n  labs(title = \"Percent Change in Total Population\",\n       subtitle = \"2000-2020 Decennial Census\",\n       color = \"\",\n       caption = \"Variables: P1_001N and P001001\",\n       linetype = \"\")\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-2-8.png){width=672}\n:::\n\n```{.r .cell-code}\n# Finally, we want to visualize the population estimates. \n# In this case, we will be estimated the 2030 population.\n# 3. Population Estimates                                                       \n\n# Calculate AAAC for each geography.\n# AAAC = 2020 population - 2000 population / 20\n# AKA. AAAC = population - population / time\npopulation <- population %>%\n  group_by(NAME) %>%\n  mutate(AAAC = (pop[year == 2020] - pop[year == 2000]) / 20)\n\n# Create a new data frame for the projected population in 2030.\nproj_2030 <- population %>%\n  filter(year == 2020) %>%\n  mutate(year = 2030, pop = pop + (AAAC*10))\n\n# Combine the original data frame and the projected population data for 2030.\npopulation <- bind_rows(population, proj_2030)\n\n# Remove the AAAC column.\npopulation <- population %>%\n  select(-AAAC)\n\n# Add a new column specifying if the population is actual or a projection.\npopulation <- population %>% \n  mutate(type = if_else(year == 2030, \"Projection\", \"Actual\"))\n\n\n# Plot the actual and projected total population from 2000 to 2030               PLOT \npopulation[population$NAME %in% c(\"Grundy Center\", \"Independence\", \"New Hampton\"), ] %>% \n  ggplot(aes(x = year, y = pop, group = NAME, linetype = NAME)) +\n  geom_line(linewidth = 1)+\n  geom_point(aes(color = type), size = 2)+\n  geom_text(aes(label = scales::comma(round(pop))),\n            vjust = -1)+\n  theme_fivethirtyeight()+\n  scale_y_continuous(labels = scales::comma,\n                     limits = c(2500,6500))+\n  scale_x_continuous(limits = c(1998,2032),\n                     labels = c(\"2000\",\"2010\",\"2020\", \"2030 Est.\"))+\n  theme(legend.position = \"bottom\")+\n  labs(x = \"\",\n       color = \"\",\n       linetype = \"\",\n       title = \"Total Population\",\n       caption = \"2030 Population Estimated with AAAC\\nVariables: P1_001N and P001001\",\n       subtitle = \"2000-2020 Decennial Census\")\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-2-9.png){width=672}\n:::\n:::\n\n\n### Median Income Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Median Income\n\n# Getting median income data from the 5-Year American Community Survey. \n# The median income variable is \"B19013_001.\"\n\n# Create an object called \"years\" that lists the years you want to pull data from. \n# We want all of the years the ACS data is available. \nyears <- 2009:2021\nnames(years) <- years\n\n# Use get_acs() to pull median income data at the place level.\nplaceIncome <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variables = c(\"median_income\" = \"B19013_001\"),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") \n\n# Remove the \" city, Iowa|, Iowa\" from the end of the place names.\nplaceIncome <- placeIncome %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\"))\n\n# Filter placeIncome for desired cities.\n# Add a geography column.\nplaceIncome <- placeIncome %>%\n  filter(NAME %in% c(\"Grundy Center\", \"Independence\", \"New Hampton\")) %>% \n  mutate(geography = \"Place\")\n\n\n# Use get_acs() to pull median income data at the state level.\nstateIncome <- map_dfr(years, ~{\n  get_acs(\n    geography = \"state\",\n    variables = c(\"median_income\" = \"B19013_001\"),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") \n\n# Add a geography column. \nstateIncome <- stateIncome %>% \n  mutate(geography = \"State\")\n\n\n# Use get_acs() to pull median income data at the regional level.\nregionIncome <- map_dfr(years, ~{\n  get_acs(\n    geography = \"region\",\n    variables = c(\"median_income\" = \"B19013_001\"),\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") \n\n# Remove the \" Region\" from the end of the region names.\nregionIncome <- regionIncome %>% \n  mutate(NAME = str_remove(NAME, \" Region\"))\n\n# Filter regionIncome for Midwest.\n# Add a geography column.\nregionIncome <- regionIncome %>%\n  filter(NAME %in% \"Midwest\") %>% \n  mutate(geography = \"Region\")\n\n\n# Use get_acs() to pull median income data at the national level.\nnationIncome <- map_dfr(years, ~{\n  get_acs(\n    geography = \"us\",\n    variables = c(\"median_income\" = \"B19013_001\"),\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\")\n\n# Add a geography column.\nnationIncome <- nationIncome %>% \n  mutate(geography = \"Nation\")\n\n# Bind all geographies together with bind_rows().\nincome <- nationIncome %>% \n  bind_rows(regionIncome, stateIncome, placeIncome)\n\n# Add a new column specifying if the geography is a nation, region, state, or place. \nincome <- income %>% \n  mutate(grouping = ifelse(NAME %in% c(\"United States\", \"Midwest\", \"Iowa\"), \"Contextual Area\", NAME))\n\n# Create three separate plots for Grundy Center, Independence and New Hampton.\n# Combine plots together using patchwork library. \n#install.packages(\"patchwork\")\nlibrary(patchwork)\n\n# Plot the median income for Grundy Center and its contextual geographies.       PLOT\nplot1 <- income[income$NAME %in% c(\"Grundy Center\", \"United States\", \"Midwest\", \"Iowa\"), ] %>% \n  ggplot(aes(x = year, y = median_incomeE, group = NAME)) +\n  geom_ribbon(aes(ymax = median_incomeE + median_incomeM, ymin = median_incomeE - median_incomeM, fill = geography),\n              alpha = 0.3) + \n  geom_line(aes(color = geography), linewidth = 1)+\n  theme_fivethirtyeight()+\n  scale_y_continuous(labels = label_dollar(scale = .001, suffix = \"k\"),\n                     limits = c(32250,80000))+\n  theme(legend.position = \"none\", \n        axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(x = \"\",\n       color = \"\",\n       linetype = \"\",\n       subtitle = \"2009-2021 5-Year ACS Estimates\\nGrundy Center\",\n       fill = \"\",\n       title = \"Median Income\") \n\n# Plot the median income for Independence and its contextual geographies.        PLOT \nplot2 <- income[income$NAME %in% c(\"Independence\", \"United States\", \"Midwest\", \"Iowa\"), ] %>% \n  ggplot(aes(x = year, y = median_incomeE, group = NAME)) +\n  geom_ribbon(aes(ymax = median_incomeE + median_incomeM, ymin = median_incomeE - median_incomeM, fill = geography),\n              alpha = 0.3) + \n  geom_line(aes(color = geography), linewidth = 1)+\n  theme_fivethirtyeight()+\n  scale_y_continuous(labels = label_dollar(scale = .001, suffix = \"k\"),\n                     limits = c(32250,80000))+\n  theme(legend.position = \"none\", axis.text.x = element_text(angle = 45, hjust = 1))+\n  labs(x = \"\",\n       color = \"\",\n       linetype = \"\",\n       subtitle = \"\\nIndependence\",\n       caption = \"\",\n       fill = \"\")\n\n# Plot the median income for New Hampton and its contextual geographies.         PLOT \nplot3 <- income[income$NAME %in% c(\"New Hampton\", \"United States\", \"Midwest\", \"Iowa\"), ] %>% \n  ggplot(aes(x = year, y = median_incomeE, group = NAME)) +\n  geom_ribbon(aes(ymax = median_incomeE + median_incomeM, ymin = median_incomeE - median_incomeM, fill = geography),\n              alpha = 0.3) + \n  geom_line(aes(color = geography), linewidth = 1)+\n  theme_fivethirtyeight()+\n  scale_y_continuous(labels = label_dollar(scale = .001, suffix = \"k\"),\n                     limits = c(32250,80000))+\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1))+\n  labs(x = \"\",\n       color = \"\",\n       linetype = \"\",\n       subtitle = \"\\nNew Hampton\",\n       fill = \"\",\n       caption = \"Shaded area represents margin of error around the ACS estimate\\nVariable: B19013_001\")\n\n# Combine plots. \ncombined_plots <- wrap_plots(plot1, plot2, plot3)\n```\n:::\n\n\n### Median Year Built and Median Value by Year Built Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# House Age                                                               \n\n# Want to plot Year Built data as percentages to standardize that data over different geography sizes.\n# Get Year Built data and Total Structure data from 2021 5-year American Community Survey (ACS) for all places in Iowa.\nplaceAge <- get_acs(\n  geography = \"place\", \n  state = \"IA\", \n  variables = c(\"2020 or later\" = \"B25034_002\", \n                \"2010 to 2019\" = \"B25034_003\", \n                \"2000 to 2009\" = \"B25034_004\",\n                \"1990 to 1999\" = \"B25034_005\",\n                \"1980 to 1989\" = \"B25034_006\",\n                \"1970 to 1979\" = \"B25034_007\",\n                \"1960 to 1969\" = \"B25034_008\",\n                \"1950 to 1959\" = \"B25034_009\",\n                \"1940 to 1949\" = \"B25034_010\",\n                \"1939 or earlier\" = \"B25034_011\",\n                \"total\" = \"B25034_001\"), \n  year = 2021)\n# Filter for desired cities. \nplaceAge <- placeAge %>% \n  filter(NAME %in% c(\"Grundy Center city, Iowa\", \"Independence city, Iowa\", \"New Hampton city, Iowa\"))\n# Remove \" city, Iowa\" using str_remove().\nplaceAge <- placeAge %>% \n  mutate(NAME = str_remove(NAME, \"city, Iowa\"))\n# Group the house age data frame by NAME and calculate the percent by dividing the estimate value by the total value. \nplaceAge <- placeAge %>% \n  group_by(NAME) %>% \n  mutate(percent = estimate/ first(estimate)) %>% \n  filter(variable != \"total\") # Removes rows containing the total.\n\n# Get Year Built data and Total Structure data from 2021 5-year American Community Survey (ACS) for Iowa.\nstateAge <- get_acs(\n  geography = \"state\", \n  state = \"IA\", \n  variables = c(\"2020 or later\" = \"B25034_002\", \n                \"2010 to 2019\" = \"B25034_003\", \n                \"2000 to 2009\" = \"B25034_004\",\n                \"1990 to 1999\" = \"B25034_005\",\n                \"1980 to 1989\" = \"B25034_006\",\n                \"1970 to 1979\" = \"B25034_007\",\n                \"1960 to 1969\" = \"B25034_008\",\n                \"1950 to 1959\" = \"B25034_009\",\n                \"1940 to 1949\" = \"B25034_010\",\n                \"1939 or earlier\" = \"B25034_011\",\n                \"total\" = \"B25034_001\"), \n  year = 2021)\n# Calculate the percent by dividing the estimate value by the total value. \nstateAge <- stateAge %>% \n  mutate(percent = estimate/ first(estimate)) %>% \n  filter(variable != \"total\") # Removes rows containing the total.\n\n# Get Year Built data and Total Structure data from 2021 5-year American Community Survey (ACS) for the Midwest.\nregionAge <- get_acs(\n  geography = \"region\", \n  variables = c(\"2020 or later\" = \"B25034_002\", \n                \"2010 to 2019\" = \"B25034_003\", \n                \"2000 to 2009\" = \"B25034_004\",\n                \"1990 to 1999\" = \"B25034_005\",\n                \"1980 to 1989\" = \"B25034_006\",\n                \"1970 to 1979\" = \"B25034_007\",\n                \"1960 to 1969\" = \"B25034_008\",\n                \"1950 to 1959\" = \"B25034_009\",\n                \"1940 to 1949\" = \"B25034_010\",\n                \"1939 or earlier\" = \"B25034_011\",\n                \"total\" = \"B25034_001\"), \n  year = 2021)\n# Filter for desired cities. \nregionAge <- regionAge %>% \n  filter(NAME == \"Midwest Region\")\n# Remove \" city, Iowa\" using str_remove().\nregionAge <- regionAge %>% \n  mutate(NAME = str_remove(NAME, \" Region\"))\n# Group the house age data frame by NAME and calculate the percent by dividing the estimate value by the total value. \nregionAge <- regionAge %>% \n  mutate(percent = estimate/ first(estimate)) %>% \n  filter(variable != \"total\") # Removes rows containing the total.\n\n# Get Year Built data and Total Structure data from 2021 5-year American Community Survey (ACS) for the United States.\nnationAge <- get_acs(\n  geography = \"us\", \n  variables = c(\"2020 or later\" = \"B25034_002\", \n                \"2010 to 2019\" = \"B25034_003\", \n                \"2000 to 2009\" = \"B25034_004\",\n                \"1990 to 1999\" = \"B25034_005\",\n                \"1980 to 1989\" = \"B25034_006\",\n                \"1970 to 1979\" = \"B25034_007\",\n                \"1960 to 1969\" = \"B25034_008\",\n                \"1950 to 1959\" = \"B25034_009\",\n                \"1940 to 1949\" = \"B25034_010\",\n                \"1939 or earlier\" = \"B25034_011\",\n                \"total\" = \"B25034_001\"), \n  year = 2021)\n# Calculate the percent by dividing the estimate value by the total value. \nnationAge <- nationAge %>% \n  mutate(percent = estimate/ first(estimate)) %>% \n  filter(variable != \"total\") # Removes rows containing the total.\n\n# Bind contextual data together using bind_rows().\ncontextAge <- stateAge %>% \n  bind_rows(regionAge, nationAge)\n\n# Plot the Year Built data.                                                      PLOT\n# Group by name. Set geom_col() position to dodge to get the data displayed side by side. \nhouse_age <- ggplot() +\n  geom_line(data = contextAge, aes(x = variable, y = percent, group = NAME, linetype = NAME), linewidth = 1, alpha = .6) +\n  geom_col(data = placeAge, aes(x = variable, y = percent, group = NAME, fill = NAME), position = \"dodge\", alpha = .9) +\n  scale_y_continuous(labels = scales::percent) +\n  theme_fivethirtyeight() +\n  theme(legend.position = \"none\") +\n  labs(title = \"Year Structure Built\",\n       subtitle = \"2017-2021 5-Year ACS Estimates\",\n       x = \"\",\n       y = \"ACS estimate\",\n       fill = \"\",\n       linetype = \"\")+\n  #  caption = \"Variables: B25034_002, B25034_003, B25034_004, B25034_005, B25034_006,\\nB25034_007, B25034_008, B25034_009,B25034_010, B25034_011, B25034_001\")+\n  theme(axis.text.x = element_text(angle = 30, hjust = 1))\n\n\n# Median Home Value by Year Structure Built                                \n\n# Get data from 2021 5-year American Community Survey for all places in Iowa.\nplaceValueAge <- get_acs(\n  geography = \"place\", \n  state = \"IA\", \n  variables = c(\"2020 or later\" = \"B25107_002\", \n                \"2010 to 2019\" = \"B25107_003\", \n                \"2000 to 2009\" = \"B25107_004\",\n                \"1990 to 1999\" = \"B25107_005\",\n                \"1980 to 1989\" = \"B25107_006\",\n                \"1970 to 1979\" = \"B25107_007\",\n                \"1960 to 1969\" = \"B25107_008\",\n                \"1950 to 1959\" = \"B25107_009\",\n                \"1940 to 1949\" = \"B25107_010\",\n                \"1939 or earlier\" = \"B25107_011\"), \n  year = 2021)\n# Filter for desired cities. \nplaceValueAge <- placeValueAge %>% \n  filter(NAME %in% c(\"Grundy Center city, Iowa\", \"Independence city, Iowa\", \"New Hampton city, Iowa\")) %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa\"))\n\n# Get data from 2021 5-year American Community Survey for Iowa.\nstateValueAge <- get_acs(\n  geography = \"state\", \n  state = \"IA\", \n  variables = c(\"2020 or later\" = \"B25107_002\", \n                \"2010 to 2019\" = \"B25107_003\", \n                \"2000 to 2009\" = \"B25107_004\",\n                \"1990 to 1999\" = \"B25107_005\",\n                \"1980 to 1989\" = \"B25107_006\",\n                \"1970 to 1979\" = \"B25107_007\",\n                \"1960 to 1969\" = \"B25107_008\",\n                \"1950 to 1959\" = \"B25107_009\",\n                \"1940 to 1949\" = \"B25107_010\",\n                \"1939 or earlier\" = \"B25107_011\"), \n  year = 2021)\n\n# Get data from 2021 5-year American Community Survey for the Midwest.\nregionValueAge <- get_acs(\n  geography = \"region\", \n  variables = c(\"2020 or later\" = \"B25107_002\", \n                \"2010 to 2019\" = \"B25107_003\", \n                \"2000 to 2009\" = \"B25107_004\",\n                \"1990 to 1999\" = \"B25107_005\",\n                \"1980 to 1989\" = \"B25107_006\",\n                \"1970 to 1979\" = \"B25107_007\",\n                \"1960 to 1969\" = \"B25107_008\",\n                \"1950 to 1959\" = \"B25107_009\",\n                \"1940 to 1949\" = \"B25107_010\",\n                \"1939 or earlier\" = \"B25107_011\"), \n  year = 2021)\n# Filter for the Midwest. \nregionValueAge <- regionValueAge %>% \n  filter(NAME == \"Midwest Region\") %>% \n  mutate(NAME = str_remove(NAME, \" Region\"))\n\n# Get data from 2021 5-year American Community Survey for the United States.\nnationValueAge <- get_acs(\n  geography = \"us\", \n  variables = c(\"2020 or later\" = \"B25107_002\", \n                \"2010 to 2019\" = \"B25107_003\", \n                \"2000 to 2009\" = \"B25107_004\",\n                \"1990 to 1999\" = \"B25107_005\",\n                \"1980 to 1989\" = \"B25107_006\",\n                \"1970 to 1979\" = \"B25107_007\",\n                \"1960 to 1969\" = \"B25107_008\",\n                \"1950 to 1959\" = \"B25107_009\",\n                \"1940 to 1949\" = \"B25107_010\",\n                \"1939 or earlier\" = \"B25107_011\"), \n  year = 2021)\n\n# Join all geographies.\ncontextValueAge <- stateValueAge %>% \n  bind_rows(regionValueAge, nationValueAge)\n\n# plot median home value by year structure built                                  PLOT\nhouse_value_by_year <- ggplot() +\n  geom_line(data = contextValueAge, aes(x = variable, y = estimate, group = NAME, linetype = NAME), linewidth = 1, alpha = .6) +\n  geom_col(data = placeValueAge, aes(x = variable, y = estimate, group = NAME, fill = NAME), position = \"dodge\", alpha = .9) +\n  scale_y_continuous(labels = scales::dollar) +\n  theme_fivethirtyeight() +\n  labs(title = \"Median Home Value by Year Structure Built\",\n       subtitle = \"2017-2021 5-Year ACS Estimates\",\n       x = \"\",\n       y = \"ACS estimate\",\n       fill = \"\",\n       linetype = \"\",\n       caption = \"Variables: B25034_002, B25034_003, B25034_004, B25034_005, B25034_006,\\nB25034_007, B25034_008, B25034_009,B25034_010, B25034_011, B25034_001\") +\n  theme(axis.text.x = element_text(angle = 30, hjust = 1))\n\n#Use patchwork library to parse together year built and median value by year built plots.\n\nlibrary(patchwork)\n\nvalue_and_year_built <- house_age +house_value_by_year +\n  plot_layout(ncol = 1)\n```\n:::\n\n\n### Median House Value Plots\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Median House Value                                                         \n\n# Getting housing value data from the 5-year 2020 American Community Survey.\n# Specify county for just Chickasaw, Grundy, and Buchanan County.\n# The API Code for median home value is \"B25077_001.\"\nhousing_val <- get_acs(\n  geography = \"tract\", \n  variables = \"B25077_001\", \n  state = \"IA\", \n  county = c(\"Chickasaw\",\"Grundy\",\"Buchanan\"\n  ),\n  year = 2020\n)\n# Separate the median home value data into three separate geographies: tract, county, and state.\nhousing_val2 <- separate(\n  housing_val, \n  NAME, \n  into = c(\"tract\", \"county\", \"state\"), \n  sep = \", \"\n)  \n\n# Filter median home value data by census tract. \n# The city of Independence falls into two census tracts: 9505 and 9504.\n# Grundy Center is in tract 9603.\n# New Hampton is in tract 704.\n# Add a new column called \"city\" with the associated city name. \nind_house_val <- housing_val2 %>% \n  filter(tract == c(\"Census Tract 9505\", \"Census Tract 9504\")) %>% \n  mutate(city = \"Independence\")\nhampton_house_val <- housing_val2 %>% \n  filter(tract == \"Census Tract 704\") %>% \n  mutate(city = \"New Hampton\")\ngrundy_house_val <- housing_val2 %>% \n  filter(tract == \"Census Tract 9603\") %>% \n  mutate(city = \"Grundy Center\")\n\n# Bind individual data frames together with bind_rows().\ncities_house_val <- ind_house_val %>% \n  bind_rows(hampton_house_val,grundy_house_val)\n\n# Use the summarize function to find the minimum, maximum, median and mean of the median home value estimates. \ncities_house_val %>%\n  group_by(city) %>%\n  summarize(min = min(estimate, na.rm = TRUE), \n            mean = mean(estimate, na.rm = TRUE), \n            median = median(estimate, na.rm = TRUE), \n            max = max(estimate, na.rm = TRUE)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 x 5\n  city             min   mean median    max\n  <chr>          <dbl>  <dbl>  <dbl>  <dbl>\n1 Grundy Center 135900 135900 135900 135900\n2 Independence  133200 136400 136400 139600\n3 New Hampton   117500 117500 117500 117500\n```\n:::\n\n```{.r .cell-code}\n# Cannot visualize cities_house_val using this ggplot method because Grundy Center and New Hampton only have one value.\n# Plot housing value by county instead.\n# Add in a point that displays the median for each city from the 2020 5-Year ACS.\nhousing_val3 <- get_acs(\n  geography = \"place\", \n  variables = \"B25077_001\", \n  state = \"IA\",\n  year = 2020) %>% \n  filter(NAME %in% c(\"Grundy Center city, Iowa\",\"New Hampton city, Iowa\", \"Independence city, Iowa\"))\n\n# grundy center = $130,600\n# new hampton = $112,200\n# independence = $129,900\n\n# Create a density plot for median home value.                                   PLOT\nggplot(housing_val2, aes(x = estimate, fill = county)) + \n  geom_density(alpha = 0.3, linewidth = 1) +\n  geom_point(aes(y = 0.00002074, x = 112200), size = 2) + # New Hampton\n  geom_point(aes(x = 129900, y = .00001405), size = 2) + # Independence\n  geom_point(aes(x = 130600, y = .0000227), size = 2) + # Grundy Center\n  geom_text(aes(y = 0.00002074, x = 112200, label = \"New Hampton\\n$112,200\"), hjust = -.1, vjust = 1) +\n  geom_text(aes(x = 129900, y = .00001405, label = \"Independence\\n$129,900\"), hjust = -.1, vjust = 1) +\n  geom_text(aes(x = 130600, y = .0000227, label = \"Grundy Center\\n$130,600\"), hjust = 1.1, vjust = -.15) +\n  labs(title = \"Median House Values by Census Tract\",\n       subtitle = \"2016-2020 5-Year ACS Estimates\",\n       y = \"\",\n       x = \"Median House Value\",\n       caption = \"Points represent median house value for each city\\nVariable: B25077_001\",\n       fill = \"\")+\n  scale_x_continuous(labels = dollar_format()) +\n  scale_y_continuous(labels = scales::comma,\n                     limits = c(0,.000026))+\n  theme_fivethirtyeight()\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Now, want to plot all available data for median home value. \n# Getting median home value data from the 5-Year American Community Survey. \n# The median home value code is \"B25077_001.\"\n\n# Create an object called \"years\" that lists the years you want to pull data from. \n# We want all of the years the ACS data is available. \nyears <- 2009:2021\nnames(years) <- years\n\n# Use get_acs() to pull median home value data at the place level.\nplaceValue <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variables = c(\"median_value\" = \"B25077_001\"),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") \n\n# Remove the \" city, Iowa|, Iowa\" from the end of the place names.\nplaceValue <- placeValue %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\"))\n\n# Filter placeValue for desired cities.\n# Add a geography column.\nplaceValue <- placeValue %>%\n  filter(NAME %in% c(\"Grundy Center\", \"Independence\", \"New Hampton\")) %>% \n  mutate(geography = \"Place\")\n\n\n# Use get_acs() to pull median home value data at the state level.\nstateValue <- map_dfr(years, ~{\n  get_acs(\n    geography = \"state\",\n    variables = c(\"median_value\" = \"B25077_001\"),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") \n\n# Add a geography column. \nstateValue <- stateValue %>% \n  mutate(geography = \"State\")\n\n\n# Use get_acs() to pull median home value data at the regional level.\nregionValue <- map_dfr(years, ~{\n  get_acs(\n    geography = \"region\",\n    variables = c(\"median_value\" = \"B25077_001\"),\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") \n\n# Remove the \" Region\" from the end of the region names\nregionValue<- regionValue %>% \n  mutate(NAME = str_remove(NAME, \" Region\"))\n\n# Filter regionValue for Midwest.\n# Add a geography column.\nregionValue <- regionValue %>%\n  filter(NAME %in% \"Midwest\") %>% \n  mutate(geography = \"Region\")\n\n\n# Use get_acs() to pull median home value data at the national level.\nnationValue <- map_dfr(years, ~{\n  get_acs(\n    geography = \"us\",\n    variables = c(\"median_value\" = \"B25077_001\"),\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\")\n\n# Add a geography column.\nnationValue <- nationValue %>% \n  mutate(geography = \"Nation\")\n\n# Bind all geographies together with bind_rows().\nvalue <- nationValue %>% \n  bind_rows(regionValue, stateValue, placeValue)\n\n# Add a new column specifying if the geography is a nation, region, state, or place. \nvalue <- value %>% \n  mutate(grouping = ifelse(NAME %in% c(\"United States\", \"Midwest\", \"Iowa\"), \"Contextual Area\", NAME))\n\n# Create three separate plots for Grundy Center, Independence and New Hampton.\n# Combine plots together using patchwork library. \n#install.packages(\"patchwork\")\nlibrary(patchwork)\n\n# Plot the median home value for Grundy Center and its contextual geographies.       PLOT\nplot1 <- value[value$NAME %in% c(\"Grundy Center\", \"United States\", \"Midwest\", \"Iowa\"), ] %>% \n  ggplot(aes(x = year, y = median_valueE, group = NAME)) +\n  geom_ribbon(aes(ymax = median_valueE + median_valueM, ymin = median_valueE - median_valueM, fill = geography),\n              alpha = 0.3) + \n  geom_line(aes(color = geography), linewidth = 1)+\n  theme_fivethirtyeight()+\n  scale_y_continuous(labels = label_dollar(scale = .001, suffix = \"k\"),\n                     limits = c(85000,250000))+\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 45, hjust = 1))+\n  labs(x = \"\",\n       color = \"\",\n       linetype = \"\",\n       subtitle = \"2009-2021 5-Year ACS Estimates\\nGrundy Center\",\n       fill = \"\",\n       title = \"Median Home Value\")\n\n# Plot the median home value for Independence and its contextual geographies.        PLOT \nplot2 <- value[value$NAME %in% c(\"Independence\", \"United States\", \"Midwest\", \"Iowa\"), ] %>% \n  ggplot(aes(x = year, y = median_valueE, group = NAME)) +\n  geom_ribbon(aes(ymax = median_valueE + median_valueM, ymin = median_valueE - median_valueM, fill = geography),\n              alpha = 0.3) + \n  geom_line(aes(color = geography), linewidth = 1)+\n  theme_fivethirtyeight()+\n  scale_y_continuous(labels = label_dollar(scale = .001, suffix = \"k\"),\n                     limits = c(85000,250000))+\n  theme(legend.position = \"none\",\n        axis.text.x = element_text(angle = 45, hjust = 1))+\n  labs(x = \"\",\n       color = \"\",\n       linetype = \"\",\n       subtitle = \"\\nIndependence\",\n       fill = \"\")\n\n# Plot the median value for New Hampton and its contextual geographies.         PLOT \nplot3 <- value[value$NAME %in% c(\"New Hampton\", \"United States\", \"Midwest\", \"Iowa\"), ] %>% \n  ggplot(aes(x = year, y = median_valueE, group = NAME)) +\n  geom_ribbon(aes(ymax = median_valueE + median_valueM, ymin = median_valueE - median_valueM, fill = geography),\n              alpha = 0.3) + \n  geom_line(aes(color = geography), linewidth = 1)+\n  theme_fivethirtyeight()+\n  scale_y_continuous(labels = label_dollar(scale = .001, suffix = \"k\"),\n                     limits = c(85000,250000))+\n  theme(legend.position = \"bottom\",\n        axis.text.x = element_text(angle = 45, hjust = 1))+\n  labs(x = \"\",\n       color = \"\",\n       linetype = \"\",\n       subtitle = \"\\nNew Hampton\",\n       fill = \"\",\n       caption = \"Shaded area represents margin of error around the ACS estimate\\nVariable: B25077_001\")\n\n# Combine plots. \ncombined_plots1 <- wrap_plots(plot1, plot2, plot3)\n\n\n# Plot just the city median home value data.                                     PLOT\nvalue[value$NAME %in% c(\"Grundy Center\", \"New Hampton\", \"Independence\"), ] %>% \n  ggplot(aes(x = year, y = median_valueE, group = NAME, fill = NAME)) + \n  geom_ribbon(aes(ymax = median_valueE + median_valueM, ymin = median_valueE - median_valueM),\n              alpha = 0.3) + \n  geom_line(aes(color = NAME), linewidth = 1) + \n  theme_fivethirtyeight() + \n  scale_y_continuous(labels = label_dollar(scale = .001, suffix = \"k\")) +\n  labs(title = \"Median Home Value\",\n       subtitle = \"2009-2021 5-Year ACS Estimates\",\n       x = \"Year\",\n       y = \"ACS estimate\",\n       fill = \"\",\n       color = \"\",\n       caption = \"Shaded area represents margin of error around the ACS estimate\\nVariable: B25077_001\") +\n  geom_text(aes(x = \"2021\", y =137100, label = \"$137,000\"), vjust = -1)+\n  geom_text(aes(x = \"2021\", y = 133300, label = \"$133,300\"), vjust = 2) +\n  geom_text(aes(x = \"2021\", y = 122600, label = \"$122,600\"), vjust = -1)\n```\n\n::: {.cell-output-display}\n![](Week_8_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n:::\n\n\n### Housing Occupancy Plots\n\n\\`\\`\\`{r}, warning = FALSE, message = FALSE} \\# Home Ownership, Rental, and Vacancy Rates\n\n# Getting owner occupied data and total occupied units from 5-Year American Community Survey.\n\n# Using years object that was defined earlier.\n\nplaceOwn \\<- map_dfr(years, \\~{ get_acs( geography = \"place\", variables = c(\"Owner Occupied\" = \"B25003_002\", \"total\" = \"B25001_001\"), state = \"IA\", year = .x, survey = \"acs5\", ) }, .id = \"year\")\n\n# Create a new column for percent own.\n\nplaceOwn \\<- placeOwn %\\>% group_by(year, GEOID, NAME) %\\>% mutate(percent = estimate / first(estimate)) filter(variable != \"total\")\n\n# Getting renter occupied data and total occupied units from 5-Year American Community Survey.\n\n# Using years object defined earlier.\n\nplaceRent \\<- map_dfr(years, \\~{ get_acs( geography = \"place\", variables = c(\"Renter Occupied\" = \"B25003_003\", \"total\" = \"B25001_001\"), state = \"IA\", year = .x, survey = \"acs5\", ) }, .id = \"year\")\n\n# Add a new column for percent rent.\n\nplaceRent \\<- placeRent %\\>% group_by(year, GEOID, NAME) %\\>% mutate(percent = estimate / first(estimate)) %\\>% filter(variable != \"total\")\n\n# Getting vacant units and total units from 5-Year ACS.\n\n# Using years object defined earlier.\n\nplaceVacant \\<- map_dfr(years, \\~{ get_acs( geography = \"place\", state = \"IA\", variables = c(\"Vacant\" = \"B25002_003\", \"total\" = \"B25001_001\"), year = .x, survey = \"acs5\", ) }, .id = \"year\")\n\n# Create new column for vacant percent.\n\nplaceVacant \\<- placeVacant %\\>% group_by(year, GEOID, NAME) %\\>% mutate(percent = estimate / first(estimate)) %\\>% filter(variable != \"total\")\n\n# Combine all data into one data frame.\n\nplaceRate \\<- placeOwn %\\>% bind_rows(placeRent, placeVacant)\n\n# To simplify the filtering process from now on, create an object for desired cities.\n\ntarget_cities \\<- c(\"Independence city, Iowa\",\"New Hampton city, Iowa\", \"Grundy Center city, Iowa\")\n\n# Filter for desired cities.\n\nplaceRate \\<- placeRate %\\>% filter(NAME %in% target_cities) %\\>% mutate(NAME = str_remove(NAME,\" city, Iowa\"))\n\n# Add a geography column.\n\nplaceRate \\<- placeRate %\\>% mutate(geography = \"Place\")\n\n### STATE TIME\n\n# Getting owner occupied data and total occupied units from 5-Year American Community Survey for Iowa.\n\n# Using years object that was defined earlier.\n\nstateOwn \\<- map_dfr(years, \\~{ get_acs( geography = \"state\", variables = c(\"Owner Occupied\" = \"B25003_002\", \"total\" = \"B25001_001\"), state = \"IA\", year = .x, survey = \"acs5\", ) }, .id = \"year\")\n\n# Create a column called prc_own for percent home ownership.\n\n# Create column for the margin of error of prc_own.\n\n# Filter the data frame for the desired cities.\n\nstateOwn \\<- stateOwn %\\>% group_by(year) %\\>% mutate(percent = estimate/first(estimate)) %\\>% filter(variable != \"total\")\n\n# Repeat the process for Renter Occupied and Vacant Units.\n\nstateRent \\<- map_dfr(years, \\~{ get_acs( geography = \"state\", variables = c(\"Renter Occupied\" = \"B25003_003\", \"total\" = \"B25001_001\"), state = \"IA\", year = .x, survey = \"acs5\", ) }, .id = \"year\") \\# Calculate percent. stateRent \\<- stateRent %\\>% group_by(year) %\\>% mutate(percent = estimate/first(estimate)) %\\>% filter(variable != \"total\")\n\n# Vacant Units time.\n\nstateVacant \\<- map_dfr(years, \\~{ get_acs( geography = \"state\", variables = c(\"Vacant\" = \"B25002_003\", \"total\" = \"B25001_001\"), state = \"IA\", year = .x, survey = \"acs5\", ) }, .id = \"year\") \\# Calculate percent. stateVacant \\<- stateVacant %\\>% group_by(year) %\\>% mutate(percent = estimate/first(estimate)) %\\>% filter(variable != \"total\")\n\n# Combine all rates and add geography.\n\nstateRate \\<- stateOwn %\\>% bind_rows(stateRent, stateVacant) %\\>% mutate(geography = \"State\")\n\nplace_state %\\>% filter(variable == \"Owner Occupied\") %\\>% ggplot(aes(x = year, y = percent, group = NAME, color = NAME)) + geom_line(linewidth = 1) + geom_point(size =2, color = \"black\") + scale_y_continuous(labels = scales::percent)+ theme_fivethirtyeight() + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(title = \"Home Ownership Rate\", caption = \"Variable: B25003_002\", color = \"\", subtitle =\"2009-2021 5-Year ACS Estimates\")\n\n#### REGION TIME\n\n# Getting owner occupied data and total occupied units from 5-Year American Community Survey for the Midwest.\n\n# Using years object that was defined earlier.\n\nregionOwn \\<- map_dfr(years, \\~{ get_acs( geography = \"region\", variables = c(\"Owner Occupied\" = \"B25003_002\", \"total\" = \"B25001_001\"), year = .x, survey = \"acs5\", ) }, .id = \"year\")\n\n# Calculate percent home ownership rate.\n\nregionOwn \\<- regionOwn %\\>% group_by(year, GEOID, NAME) %\\>% mutate(percent = estimate/first(estimate)) %\\>% filter(variable != \"total\")\n\n# Repeat for Renter Occupied data.\n\nregionRent \\<- map_dfr(years, \\~{ get_acs( geography = \"region\", variables = c(\"Renter Occupied\" = \"B25003_003\", \"total\" = \"B25001_001\"), year = .x, survey = \"acs5\" ) }, .id = \"year\") \\# Calculate percent rent. regionRent \\<- regionRent %\\>% group_by(year, GEOID, NAME) %\\>% mutate(percent = estimate / first(estimate)) %\\>% filter(variable != \"total\")\n\n# One last time for vacant units.\n\nregionVacant \\<- map_dfr(years, \\~{ get_acs( geography = \"region\", variables = c(\"Vacant\" = \"B25002_003\", \"total\" = \"B25001_001\"), year = .x, survey = \"acs5\" ) }, .id = \"year\") \\# Calculate Vacant. regionVacant \\<- regionVacant %\\>% group_by(year, GEOID, NAME) %\\>% mutate(percent = estimate/ first(estimate)) %\\>% filter(variable != \"total\")\n\n# Combine owner, renter, and vacant.\n\nregionRate \\<- regionOwn %\\>% bind_rows(regionRent, regionVacant)\n\n# To simplify the filtering process from now on, create an object for desired region\n\ntarget_region \\<- \"Midwest Region\"\n\n# Filter for Midwest.\n\n# Drop \" Region.\"\n\n# Add a geography column.\n\nregionRate \\<- regionRate %\\>% filter(NAME %in% target_region) %\\>% mutate(NAME = str_remove(NAME, \" Region\")) %\\>% mutate(geography = \"Region\")\n\n## NATION TIME\n\n# Get data from the 5-Year ACS.\n\nnationRate \\<- map_dfr(years, \\~{ get_acs( geography = \"us\", variables = c(\"Owner Occupied\" = \"B25003_002\", \"Renter Occupied\" = \"B25003_003\", \"Vacant\" = \"B25002_003\", \"total\" = \"B25001_001\"), year = .x, survey = \"acs5\" ) }, .id = \"year\")\n\n# Calculate rates.\n\n# Add geography.\n\nnationRate \\<- nationRate %\\>% group_by(year) %\\>% mutate(percent = estimate/ first(estimate)) %\\>% filter(variable != \"total\") %\\>% mutate(geography = \"Nation\")\n\n# Create plots for home ownership rate at all geographies.\n\n# HOME OWNERSHIP RATE\n\n# I want state, region, and nation in their own contextRate so that they can be displayed by linetype.\n\n# Filter placeRate for variable == \"Owner Occupied\"\n\nfiltered_placeRate \\<- placeRate %\\>% filter(variable == \"Owner Occupied\")\n\n# Bind context.\n\ncontextRate \\<- stateRate %\\>% bind_rows(regionRate, nationRate) \\# Filter stateRate for variable == \"Owner Occupied\" filtered_contextRate \\<- contextRate %\\>% filter(variable == \"Owner Occupied\")\n\n# Create the line plot: Home Ownership Rate\n\nggplot() + geom_line(data = filtered_contextRate, aes(x = year, y = percent, group = NAME, linetype = NAME), color = \"black\", linewidth = 1, alpha = .4) + geom_line(data = filtered_placeRate, aes(x = year, y = percent, group = NAME, color = NAME), linewidth = 1.75) + scale_y_continuous(labels = scales::percent, limits = c(.54,.8), breaks = c(.55,.6,.65,.7,.75,.8))+ theme_fivethirtyeight() + labs(title = \"Home Ownership Rate\", subtitle = \"2009-2021 5-Year ACS Estimates\", caption = \"Variable: B25003_002\", color = \"\", linetype =\"\")\n\n# Create plots for vacancy rate at all geographies.\n\n# VACANCY RATE\n\n# filter for vacancy\n\nvacancy_placeRate \\<- placeRate %\\>% filter(variable == \"Vacant\") vacancy_contextRate \\<- contextRate %\\>% filter(variable == \"Vacant\")\n\n# Create the line plot: Vacancy Rate\n\nggplot() + geom_line(data = vacancy_contextRate, aes(x = year, y = percent, group = NAME, linetype = NAME), color = \"black\", linewidth = 1, alpha = .4) + geom_line(data = vacancy_placeRate, aes(x = year, y = percent, group = NAME, color = NAME), linewidth = 1.5) + scale_y_continuous(labels = scales::percent, limits = c(.0, .15), breaks = c(0, .05, .1, .15)) + labs(title = \"Vacancy Rate\", subtitle = \"2009-2021 5-Year ACS Estimates\", caption = \"Variable: B25002_003\", color = \"\", linetype =\"\", x =\"\", y =\"\") + theme_fivethirtyeight()\n\n```         \n\n### Reason for Vacancy Plot\n\n```{r}, warning = FALSE, message = FALSE}\n# Reason for Vacancy                                                      \n\nplaceReason <- get_acs(geography = \"place\",\n                   state = \"IA\",\n                   year = 2021,\n                   variables = c(\"For rent\" = \"B25004_002\",\n                                 \"Rented, not occupied\" = \"B25004_003\",\n                                 \"For sale\" = \"B25004_004\",\n                                 \"Sold, not occupied\" = \"B25004_005\",\n                                 \"Seasonal\" = \"B25004_006\",\n                                 \"Migrant worker\" = \"B25004_007\",\n                                 \"Other\" = \"B25004_008\",\n                                 \"total\" = \"B25004_001\"))\n\n# Filter for desired cities.\nplaceReason <- placeReason %>% \n  filter(NAME %in% target_cities) %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa\"))\n\n# Turn values into percents of the total.\nplaceReason <- placeReason %>% \n  group_by(NAME) %>% \n  mutate(percent = estimate / first(estimate)) %>% \n  filter(variable != \"total\")\n\n# Plot reason for vacancy.                                                       PLOT\nplaceReason %>% \n  ggplot(aes(x=factor(variable, level=c(\"For rent\",\"Rented, not occupied\",\"For sale\",\"Sold, not occupied\",\"Seasonal\",\"Migrant worker\",\"Other\")), y = percent, group = NAME, fill = NAME)) +\n  geom_col(position = \"dodge\") +\n  theme_fivethirtyeight()+\n  scale_y_continuous(labels = scales::percent,\n                     breaks = c(0,.1,.2,.3,.4)) +\n  labs(title = \"Reason for Vacancy\",\n       subtitle = \"2017-2021 5-Year ACS Estimates\",\n       x = \"\",\n       y = \"ACS estimate\",\n       fill = \"\",\n       alpha = \"\",\n       caption = \"Variables: B25004_001, B25004_002, B25004_003, B25004_004,\\nB25004_005, B25004_006, B25004_007, B25004_008\")+\n  theme(axis.text.x=element_text(angle = 45, hjust = 1),\n        plot.caption = element_text(size = 8))\n```\n\n## Demographic Analysis\n\nI finished gathering data for the demographic analysis this week. The code for that is below. I made a couple of minor changes to the data from last week. I decided that I wanted to gather all American Community Survey data from all years it was available instead of just for 2021.\n\nIf you copied any of the code from the week before, I would suggest copy the code below. It is far more accurate to the actual demographic analysis. I will be creating a separate blog that outlines the process of conducting a demographic analysis.\n\n### Population Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## starting with POPULATION data for all places in Iowa ##\n##########################################################\n\n# Define the variables before getting the data.\n# The Census API code for total population for 2000 and 2010 is P001001.\npop00 <- c(\"pop\" = \"P001001\")\npop10 <- c(\"pop\" = \"P001001\")\n# The API code for total population changed for 2020.\n# The Census API code for total population is P1_001N for 2020. \npop20 <- c(\"pop\" = \"P1_001N\")\n\n##\n# Getting 2000 total population data for the USA.\npop00 <- get_decennial(geography = \"place\",\n                       state = \"IA\",\n                          year = 2000,\n                          variable = pop00,\n                          output = \"wide\") %>% \n  mutate(year = 2000)\n# Getting 2010 total population data for the USA.\npop10 <- get_decennial(geography = \"place\",\n                          state = \"IA\",\n                          year = 2010,\n                          variable = pop10,\n                          output = \"wide\") %>% \n  mutate(year = 2010)\n# Getting 2020 total population data for the USA.\npop20 <- get_decennial(geography = \"place\",\n                          state = \"IA\",\n                          year = 2020,\n                          variable = pop20,\n                          output = \"wide\") %>% \n  mutate(year = 2020)\n# Bind the years together using bind_rows to create data frame for national context. \npop <- pop20 %>% \n  bind_rows(pop10,pop00) \n\n\n# Create anew column called prc_change.\n# Group by \"NAME\" so that the calculations occur individually for each place. \n# Percent change is calculated by subtracting year2 from year1 and dividing by year2. \npop <- pop %>%\n  group_by(NAME) %>%\n  mutate(prc_change = ifelse(year == 2020, (pop - lead(pop)) / lead(pop),\n                             ifelse(year == 2010, (pop - last(pop)) / last(pop), NA)))\n\n# figure out if the places are growing, shrinking, or stable\n# stable = between -2 and 2\n# increasing > 2\n# decreasing < -2\npop <- pop %>%\n  mutate(change_label = ifelse(prc_change > .02, \"Growing\",\n                             ifelse(prc_change < -.02, \"Shrinking\", \"Stable\"))) %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\"))\n\n#rename the variables\npop <- pop %>% \n  rename(Population = pop) %>% \n  rename(Year = year) %>% \n  rename(\"Percent Change\" = prc_change) %>% \n  rename(label = change_label)\n\n\npop %>% write.csv(file = \"population_data.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## age of residents ##\n######################\n\n# adding to pop \n\n# Create an object called \"years\" that lists the years you want to pull data from. \n# We want all of the years the ACS data is available. \nyears <- 2009:2021\nnames(years) <- years\n\n# get the median age of all people in all places in Iowa from ACS\nmedian_age <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variables = c(\"median_age\" = \"B01002_001\"),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2005-2009 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2006-2010 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2007-2011 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2008-2012 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2009-2013 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2010-2014 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2011-2015 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2012-2016 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2013-2017 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2014-2018 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2015-2019 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2016-2020 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2017-2021 5-year ACS\n```\n:::\n\n```{.r .cell-code}\n# rename variables\nmedian_age <- median_age %>% \n  rename(Year = year) %>% \n  rename(\"Median Age Estimate\" = median_ageE) %>% \n  rename(moe = median_ageM)\n\n\n# get the number of people under 18 and over 65\n# API Codes seperated by gender, so have to pull twice\n# starting with Male\nmale <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variable = c(\"under5\" = \"B01001_003\",\n                 \"a5to9\" = \"B01001_004\",\n                 \"a10to14\" = \"B01001_005\",\n                 \"a15to17\" = \"B01001_006\",\n                 \"a65to66\" = \"B01001_020\",\n                 \"a67to69\" = \"B01001_021\",\n                 \"a70to74\" = \"B01001_022\",\n                 \"a75to79\" = \"B01001_023\",\n                 \"a80to84\" = \"B01001_024\",\n                 \"over85\" = \"B01001_025\",\n                 \"total\" = \"B01001_002\"),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2005-2009 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2006-2010 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2007-2011 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2008-2012 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2009-2013 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2010-2014 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2011-2015 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2012-2016 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2013-2017 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2014-2018 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2015-2019 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2016-2020 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2017-2021 5-year ACS\n```\n:::\n\n```{.r .cell-code}\n# now for Female\nfemale <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variable = c(\"under5\" = \"B01001_027\",\n                 \"a5to9\" = \"B01001_028\",\n                 \"a10to14\" = \"B01001_029\",\n                 \"a15to17\" = \"B01001_030\",\n                 \"a65to66\" = \"B01001_044\",\n                 \"a67to69\" = \"B01001_045\",\n                 \"a70to74\" = \"B01001_046\",\n                 \"a75to79\" = \"B01001_047\",\n                 \"a80to84\" = \"B01001_048\",\n                 \"over85\" = \"B01001_049\",\n                 \"total\" = \"B01001_026\"),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\"))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2005-2009 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2006-2010 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2007-2011 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2008-2012 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2009-2013 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2010-2014 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2011-2015 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2012-2016 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2013-2017 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2014-2018 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2015-2019 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2016-2020 5-year ACS\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nGetting data from the 2017-2021 5-year ACS\n```\n:::\n\n```{.r .cell-code}\n# create new columns for under18 and over 65 for both male and female\n# create a new column for gender\nmale <- male %>% \n  mutate(under18E = round(under5E + a5to9E + a10to14E + a15to17E)) %>%\n  mutate(under18M = round(sqrt(under5M^2 + a5to9M^2 + a10to14M^2 + a15to17M^2))) %>%\n  mutate(over65E = round(a65to66E + a67to69E + a70to74E + a75to79E + a80to84E + over85E)) %>%\n  mutate(over65M =  round(sqrt(a65to66M^2 + a67to69M^2 + a70to74M^2 + a75to79M^2 + a80to84M^2 + over85M^2))) %>% \n  mutate(gender = \"Male\")\n\nfemale <- female %>% \n  mutate(under18E = round(under5E + a5to9E + a10to14E + a15to17E)) %>%\n  mutate(under18M = round(sqrt(under5M^2 + a5to9M^2 + a10to14M^2 + a15to17M^2))) %>%\n  mutate(over65E = round(a65to66E + a67to69E + a70to74E + a75to79E + a80to84E + over85E)) %>%\n  mutate(over65M =  round(sqrt(a65to66M^2 + a67to69M^2 + a70to74M^2 + a75to79M^2 + a80to84M^2 + over85M^2))) %>% \n  mutate(gender = \"Female\")\n\n\n# combine the data frames\nage <- female %>% \n  bind_rows(male)\n\n# aggregate by city NAME, year, GEOID and gender\n# create new columns for percent under 18 and percent over 65\naggregated_age <- age %>% \n  group_by(year,GEOID, NAME, gender) %>% \n             summarize(prc_under18E = sum(under18E)/sum(totalE),\n                       prc_under18M = sqrt(sum(under18M^2) / sum(totalE)^2 + (sum(under18E)^2 * sum(totalM^2)) / sum(totalE)^4),\n                       prc_over65E = sum(over65E)/sum(totalE),\n                       prc_over65M = sqrt(sum(over65M^2) / sum(totalE)^2 + (sum(over65E)^2 * sum(totalM^2)) / sum(totalE)^4))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year', 'GEOID', 'NAME'. You can override\nusing the `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# add a column that states whether a place is \"aged\", \"stable\" or \"young\"\n# using a 2% difference to gauge a stable population\naggregated_age <- aggregated_age %>%\n  mutate(age_label = ifelse(prc_under18E - prc_over65E > .02, \"Young\",\n                               ifelse(prc_under18E - prc_over65E < -.02, \"Aging\", \"Stable\")))\n\n# left_join aggregated_age to age\nage <- age %>% \n  left_join(aggregated_age, by = c(\"year\",\"GEOID\",\"NAME\",\"gender\"))\n\n# rename variables\nage <- age %>% \n  rename(\"Under 5\" = under5E) %>% \n  rename(\"5 to 9\" = a5to9E) %>% \n  rename(\"10 to 14\" = a10to14E) %>% \n  rename(\"15 to 17\" = a15to17E) %>% \n  rename(\"65 to 66\" = a65to66E) %>% \n  rename(\"67 to 69\" = a67to69E) %>% \n  rename(\"70 to 74\" = a70to74E) %>% \n  rename(\"75 to 79\" = a75to79E) %>% \n  rename(\"80 to 84\" = a80to84E) %>% \n  rename(\"Over 85\" = over85E) %>% \n  rename(\"Total Population Under 18\" = under18E) %>% \n  rename(\"Total Population Over 65\" = over65E) %>% \n  rename(\"Percent Population Under 18\" = prc_under18E) %>% \n  rename(\"Percent Population Over 65\" = prc_over65E) %>% \n  rename(Label = age_label) %>% \n  rename(\"Under 5 moe\" = under5M) %>% \n  rename(\"5 to 9 moe\" = a5to9M) %>% \n  rename(\"10 to 14 moe\" = a10to14M) %>% \n  rename(\"15 to 17 moe\" = a15to17M) %>% \n  rename(\"65 to 66 moe\" = a65to66M) %>% \n  rename(\"67 to 69 moe\" = a67to69M) %>% \n  rename(\"70 to 74 moe\" = a70to74M) %>% \n  rename(\"75 to 79 moe\" = a75to79M) %>% \n  rename(\"80 to 84 moe\" = a80to84M) %>% \n  rename(\"Over 85 moe\" = over85M) %>% \n  rename(\"Total Population Under 18 moe\" = under18M) %>% \n  rename(\"Total Population Over 65 moe\" = over65M) %>% \n  rename(\"Percent Population Under 18 moe\" = prc_under18M) %>% \n  rename(\"Percent Population Over 65 moe\" = prc_over65M)\n\n# create a .csv file for age data and median age data\nage %>% write.csv(file = \"age_data.csv\")\nmedian_age %>% write.csv(file = \"median_age_data.csv\")\n```\n:::\n\n\n### Housing Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## next is housing information ##\n#################################\n\n# getting from 2021 5-Year ACS\n\n# total housing units = B25001_001\n# owner occupied units = B25003_002\n# total occupied units = B25002_002\n# total vacant units = B25002_003\n# median house value = B25077_001 \n# median house age = B25035_001\n\nhousing <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variable = c(\"total_units\" = \"B25001_001\",\n                 \"occupied_units\" = \"B25002_002\",\n                 \"vacant_units\" = \"B25002_003\",\n                 \"owner_occupied\" = \"B25003_002\",\n                 \"renter_occupied\" = \"B25003_003\",\n                 \"median_house_value\" = \"B25077_001\",\n                 \"median_year_built\" = \"B25035_001\"),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\"))\n\n\n## ALL RATES ARE PERCENTAGES\n# calculate home ownership, vacany, and rental rates\nhousing <- housing %>% \n  mutate(\"Home Ownership Rate Estimate\" = (owner_occupiedE / occupied_unitsE)) %>%  # divide owner occupied by occupied units\n  mutate(\"Home Ownership Rate moe\" = (sqrt((owner_occupiedM^2) / (occupied_unitsE^2) + ((owner_occupiedE * occupied_unitsM)^2) / (occupied_unitsE^4)))) %>%  # calculate new moe\n  mutate(\"Rental Rate Estimate\" = (renter_occupiedE / occupied_unitsE)) %>%  # divide renter occupied by occupied units\n  mutate(\"Rental Rate moe\" = (sqrt((renter_occupiedM^2) / (occupied_unitsE^2) + ((renter_occupiedE * occupied_unitsM)^2) / (occupied_unitsE^4)))) %>% # calculate new moe\n  mutate(\"Vacancy Rate Estimate\" = (vacant_unitsE / total_unitsE)) %>%  # divide vacant units by total units\n  mutate(\"Vacancy Rate moe\" = (sqrt((vacant_unitsM^2) / (total_unitsE^2) + ((vacant_unitsE * total_unitsM)^2) / (total_unitsE^4)))) %>% \n  mutate(\"Occupancy Rate Estimate\" = (occupied_unitsE / total_unitsE)) %>% \n  mutate(\"Occupancy Rate moe\" = (sqrt(occupied_unitsM^2) / (total_unitsE^2) + ((occupied_unitsE * total_unitsM^2) / total_unitsE^4)))# calculate new moe\n\n# rename variables\nhousing <- housing %>% \n  rename(\"Total Housing Units\" = total_unitsE) %>% \n  rename(\"Occupied Units\" = occupied_unitsE) %>% \n  rename(\"Owner Occupied Units\" = owner_occupiedE) %>% \n  rename(\"Renter Occupied Units\" = renter_occupiedE) %>% \n  rename(\"Median House Value\" = median_house_valueE) %>% \n  rename(\"Median Year Built\" = median_year_builtE) %>% \n  rename(\"Total Housing Units moe\" = total_unitsM) %>% \n  rename(\"Occupied Units moe\" = occupied_unitsM) %>% \n  rename(\"Owner Occupied Units moe\" = owner_occupiedM) %>% \n  rename(\"Renter Occupied Units moe\" = renter_occupiedM) %>% \n  rename(\"Median House Value moe\" = median_house_valueM) %>% \n  rename(\"Median Year Built moe\" = median_year_builtM)\n\n# create a .csv file with housing data\nhousing %>% write.csv(file = \"housing_data.csv\")\n```\n:::\n\n\n### Taxable Properties Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## next is Taxable Property Values from Liesl ##\n################################################\n\n#link to data: https://data.iowa.gov/Local-Government-Finance/Taxable-Property-Values-in-Iowa-by-Tax-District-an/ig9g-pba5\n\ntaxable.csv <- read.csv(\"C:/Users/Kailyn Hogan/OneDrive - Iowa State University/Documents/GitHub/Housing/demographics/demographic analysis/Datasets/Taxable_Property_Values_in_Iowa_by_Tax_District_and_Year.csv\")\n# City name is stored in City.Name as all caps\n# for census data, only the first letter is capitalized and city, Iowa is attached\n# need to lowercase taxable_prop_values and remove city, Iowa from housing and pop\n\ntaxable.csv <- taxable.csv %>% \n  mutate(City.Name = str_to_sentence(City.Name)) %>% \n  rename(NAME = City.Name) #str_to_sentence() uses regular sentence formatting where the first letter is capitalized\n                              # could have also used str_to_titletext()\n\n# aggregated the column based on City.Name\n# function = sum to get the sum of all values\n# na.rm = TRUE, means the NAs get ignored\naggregated_tax <- taxable.csv %>% \n  group_by(Assessment.Year,NAME) %>% \n  summarize(Residential = sum(Residential),\n            Commercial = sum(Commercial),\n            Industrial = sum(Industrial),\n            Ag.Land = sum(Ag.Land),\n            Ag.Building = sum(Ag.Building))\n  \n# rename variables \naggregated_tax <- aggregated_tax %>% \n  rename(Year = Assessment.Year)\n\n##########################################################################################################\n\naggregated_tax\n# holds summed values for each type of property for a city\n# needs further transforming for analysis\n# could change aggregation to find the median value for each property type\n# could be valuable to gather data for all years available.\n\n##########################################################################################################\n```\n:::\n\n\n### Workforce Area Characteristics and Residential Area Characteristics Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## next is RAC and WAC data from Liesl ##\n#########################################\n\n# link to data structure set: https://lehd.ces.census.gov/data/lodes/LODES8/LODESTechDoc8.0.pdf\n# interested in total number of jobs and ag related industries\n# C000 = total\n# CSN01 = ag related jobs\n\n# WAC = how many people WORK in the city\n# RAC = how many people live in the city AND have jobs\n\n# downloaded the data as .csv\n# need to read in the .csv file with read.csv()\nia_rac.csv <- read.csv(\"C:/Users/Kailyn Hogan/OneDrive - Iowa State University/Documents/GitHub/Housing/demographics/demographic analysis/Datasets/ia_rac_S000_JT00_2020.csv\")\n\n# rename w_geocode to geocode so it can easily be combined with geography2 dataframe\nia_rac.csv <- ia_rac.csv %>%\n  rename(geocode = h_geocode) \n\n# this .csv file contains the geography for the wac and rac data\n# need to join to wac and rac files so we can aggregate by city\ngeography <- read.csv(\"C:/Users/Kailyn Hogan/OneDrive - Iowa State University/Documents/GitHub/Housing/demographics/demographic analysis/Datasets/ia_xwalk.csv\")\n# tabblk2020 = h_geocode \n#ctyname = county\n#cbsaname = metropolitan area name\n#stplc = FIPS state + FIPS Place\n#stplcname = place name\n\n# reduce geography data frame to just h_geocode and NAME\ngeography2 <- geography %>% \n  select(\"tabblk2020\",\"stplc\",\"stplcname\") %>% \n  rename(geocode = tabblk2020) %>% \n  rename(GEOID = stplc) %>% \n  mutate(NAME = str_remove(stplcname, \" city, IA|, IA\")) %>% \n  select(-stplcname)\n# remove all empty rows\ngeography2 <- geography2 %>% \n  filter(NAME != \"\")%>% \n  mutate(year = 2023)\n\n# use geography2 to assign city NAME to ia_rac.csv\nrac_data <- ia_rac.csv %>% \n  left_join(geography2, by = c(\"geocode\"))\n\n# aggregate by city name\n# have to remove h_geocode and GEOID so they don't aggregate\nrac_data <- aggregate(. ~ NAME, data = rac_data, FUN = sum, na.rm = TRUE) %>% \n  select(-c(\"geocode\",\"GEOID\",\"year\",\"createdate\")) %>% \n  mutate(year = 2023)\n\n\n# downloaded the data as .csv\n# need to read in the .csv file with read.csv()\nia_wac.csv <- read.csv(\"C:/Users/Kailyn Hogan/OneDrive - Iowa State University/Documents/GitHub/Housing/demographics/demographic analysis/Datasets/ia_wac_S000_JT00_2020.csv\")\n\n# rename w_geocode to geocode so it can easily be combined with geography2 dataframe\nia_wac.csv <- ia_wac.csv %>%\n  rename(geocode = w_geocode)\n# join to geography2 data frame\nwac_data <- geography2 %>% \n  left_join(ia_wac.csv, by = \"geocode\")\n# remove all empty rows\nwac_data <- wac_data %>% \n  filter(NAME != \"\")\n# aggregate by city name\nwac_data <- aggregate(. ~ NAME, data = wac_data[, !(names(wac_data) %in% c(\"geocode\", \"GEOID\",\"createdate\"))], FUN = sum, na.rm = TRUE) %>% \n  mutate(year = 2023)\n\n\n# rename variables\nrac_data <- rac_data %>% \n  rename(\"Total Number of Jobs\" = C000) %>% \n  rename(\"Number of Jobs in NAICS sector 11 (Agriculture, Forestry, Fishing and Hunting)\" = CNS01) %>% \n  rename(\"Number of Jobs in NAICS sector 21 (Mining, Quarrying, and Oil and Gas Extraction)\" = CNS02) %>% \n  rename(\"Number of Jobs in NAICS sector 22 (Utilities)\" = CNS03) %>% \n  rename(\"Number of Jobs in NAICS sector 23 (Construction)\" = CNS04) %>% \n  rename(\"Number of Jobs in NAICS sector 32-33 (Manufacturing)\" = CNS05) %>% \n  rename(\"Number of Jobs in NAICS sector 42 (Wholesale Trade)\" = CNS06) %>% \n  rename(\"Number of Jobs in NAICS sector 44-45 (Retail Trade)\" = CNS07) %>% \n  rename(\"Number of Jobs in NAICS sector 48-49 (Transportation and Warehousing)\" = CNS08) %>% \n  rename(\"Number of Jobs in NAICS sector 51 (Information)\" = CNS09) %>% \n  rename(\"Number of Jobs in NAICS sector 52 (Finance)\" = CNS10) %>% \n  rename(\"Number of Jobs in NAICS sector 53 (Reale Estate adn Rental and Leasing)\" = CNS11) %>% \n  rename(\"Number of Jobs in NAICS sector 54 (Professional, Scientific, and Technical Services)\" = CNS12) %>% \n  rename(\"Number of Jobs in NAICS sector 55 (Management of Comapanies and Enterprises)\" = CNS13) %>% \n  rename(\"Number of Jobs in NAICS sector 56 (Administrative and Support and Waste Management and Remediation Services)\" = CNS14) %>% \n  rename(\"Number of Jobs in NAICS sector 61 (Educational Services)\" = CNS15) %>% \n  rename(\"Number of Jobs in NAICS sector 62 (Health Care and Social Assistance)\" = CNS16) %>% \n  rename(\"Number of Jobs in NAICS sector 71 (Arts, Entertainment, and Recreation)\" = CNS17) %>% \n  rename(\"Number of Jobs in NAICS sector 72 (Accomodation and Food Service)\" = CNS18) %>% \n  rename(\"Number of Jobs in NAICS sector 81 (Other Serivces, except Public Administratoin)\" = CNS19) %>% \n  rename(\"Number of Jobs in NAICS sector 92 (Public Administration)\" = CNS20)\n  \nwac_data <- wac_data %>% \n  rename(\"Total Number of Jobs\" = C000) %>% \n  rename(\"Number of Jobs in NAICS sector 11 (Agriculture, Forestry, Fishing and Hunting)\" = CNS01) %>% \n  rename(\"Number of Jobs in NAICS sector 21 (Mining, Quarrying, and Oil and Gas Extraction)\" = CNS02) %>% \n  rename(\"Number of Jobs in NAICS sector 22 (Utilities)\" = CNS03) %>% \n  rename(\"Number of Jobs in NAICS sector 23 (Construction)\" = CNS04) %>% \n  rename(\"Number of Jobs in NAICS sector 32-33 (Manufacturing)\" = CNS05) %>% \n  rename(\"Number of Jobs in NAICS sector 42 (Wholesale Trade)\" = CNS06) %>% \n  rename(\"Number of Jobs in NAICS sector 44-45 (Retail Trade)\" = CNS07) %>% \n  rename(\"Number of Jobs in NAICS sector 48-49 (Transportation and Warehousing)\" = CNS08) %>% \n  rename(\"Number of Jobs in NAICS sector 51 (Information)\" = CNS09) %>% \n  rename(\"Number of Jobs in NAICS sector 52 (Finance)\" = CNS10) %>% \n  rename(\"Number of Jobs in NAICS sector 53 (Reale Estate adn Rental and Leasing)\" = CNS11) %>% \n  rename(\"Number of Jobs in NAICS sector 54 (Professional, Scientific, and Technical Services)\" = CNS12) %>% \n  rename(\"Number of Jobs in NAICS sector 55 (Management of Comapanies and Enterprises)\" = CNS13) %>% \n  rename(\"Number of Jobs in NAICS sector 56 (Administrative and Support and Waste Management and Remediation Services)\" = CNS14) %>% \n  rename(\"Number of Jobs in NAICS sector 61 (Educational Services)\" = CNS15) %>% \n  rename(\"Number of Jobs in NAICS sector 62 (Health Care and Social Assistance)\" = CNS16) %>% \n  rename(\"Number of Jobs in NAICS sector 71 (Arts, Entertainment, and Recreation)\" = CNS17) %>% \n  rename(\"Number of Jobs in NAICS sector 72 (Accomodation and Food Service)\" = CNS18) %>% \n  rename(\"Number of Jobs in NAICS sector 81 (Other Serivces, except Public Administratoin)\" = CNS19) %>% \n  rename(\"Number of Jobs in NAICS sector 92 (Public Administration)\" = CNS20)\n\n  \n##########################################################################################################\n\n# wac and rac data need futher transforming for analysis\n# should change data into percents to standardize the data and account for different population sizes\n\n# example of transformation below\n# used earlier when data was held in data frame differently\n\n# rac c000 = total employed residents\n# rac cns01 = total residents employed in ag\n# wac c000 = total jobs in city\n# wac cns01 = total ag jobs in city\n#wac_rac <- wac_rac %>% \n#  rename(total_jobs = C000.x) %>% \n#  rename(workforce_size = C000.y) %>% \n#  rename(workforce_ag = CNS01.y) %>% \n#  rename(ag_jobs = CNS01.x)\n\n## prc_workforce locally employed = wac c000.x / rac c000\n## prc_workforce in ag = rac cns01.y / rac c000.y\n## prc_jobs in ag = wac cns01.x / wac c000.x\n#wac_rac <- wac_rac %>% \n#  mutate(prc_local = total_jobs/workforce_size) %>% \n#  mutate(prc_wrkf_ag = workforce_ag / workforce_size) %>% \n#  mutate(prc_ag_jobs = ag_jobs / total_jobs)\n\n## prc_population in workforce = rac c000.y / pop\n# left_joined to iowa data frame\n# dividing by pop20 because wac and rac data is from 2020\n#iowa <- iowa %>% \n#  mutate(prc_pop_in_wrkf = workforce_size / pop20) %>% \n#  mutate(prc_pop_employed = total_jobs / pop20)\n\n############################################################################################################\n\n# create a new .csv file for both wac and rac data\nrac_data %>% write.csv(file = \"rac_data.csv\")\nwac_data %>% write.csv(file = \"wac_data.csv\")\n```\n:::\n\n\n### Employment Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Unemployment ##\n##################       \n\n# unemployment data is separated by Age and Sex in API Codes\n# pull first for male employment\nemployment_male <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variable = c(\"Total Labor Force\" = \"B23001_001\",\n                 \"Total Labor Force, Male\" = \"B23001_002\",\n                 \"16 to 19\" = \"B23001_003\",\n                 \"16 to 19, In Armed Forces\" = \"B23001_005\",\n                 \"16 to 19, Employed\" = \"B23001_007\",\n                 \"16 to 19, Unemployed\" = \"B23001_008\",\n                 \"20 to 21\" = \"B23001_010\",\n                 \"20 to 21, In Armed Forces\" = \"B23001_012\",\n                 \"20 to 21, Employed\" = \"B23001_014\",\n                 \"20 to 21, Unemployed\" = \"B23001_015\",\n                 \"22 to 24\" = \"B23001_017\",\n                 \"22 to 24, In Armed Forces\" = \"B23001_019\",\n                 \"22 to 24, Employed\" = \"B23001_021\",\n                 \"22 to 24, Unemployed\" = \"B23001_022\",\n                 \"25 to 29\" = \"B23001_024\",\n                 \"25 to 29, In Armed Forces\" = \"B23001_026\",\n                 \"25 to 29, Employed\" = \"B23001_028\",\n                 \"25 to 29, Unemployed\" = \"B23001_029\",\n                 \"30 to 34\" = \"B23001_031\",\n                 \"30 to 34, In Armed Forces\" = \"B23001_033\",\n                 \"30 to 34, Employed\" = \"B23001_035\",\n                 \"30 to 34, Unemployed\" = \"B23001_036\",\n                 \"35 to 44\" = \"B23001_038\",\n                 \"35 to 44, In Armed Forces\" = \"B23001_040\",\n                 \"35 to 44, Employed\" = \"B23001_042\",\n                 \"35 to 44, Unemployed\" = \"B23001_043\",\n                 \"45 to 54\" = \"B23001_045\",\n                 \"45 to 54, In Armed Forces\" = \"B23001_047\",\n                 \"45 to 54, Employed\" = \"B23001_049\",\n                 \"45 to 54, Unemployed\" = \"B23001_050\",\n                 \"55 to 59\" = \"B23001_052\",\n                 \"55 to 59, In Armed Forces\" = \"B23001_054\",\n                 \"55 to 59, Employed\" = \"B23001_056\",\n                 \"55 to 59, Unemployed\" = \"B23001_057\",\n                 \"60 to 61\" = \"B23001_059\",\n                 \"60 to 61, In Armed Forces\" = \"B23001_061\",\n                 \"60 to 61, Employed\" = \"B23001_063\",\n                 \"60 to 61, Unemployed\" = \"B23001_064\",\n                 \"62 to 64\" = \"B23001_066\",\n                 \"62 to 64, In Armed Forces\" = \"B23001_068\",\n                 \"62 to 64, Employed\" = \"B23001_070\",\n                 \"62 to 64, Unemployed\" = \"B23001_071\",\n                 \"65 to 69\" = \"B23001_073\",\n                 \"65 to 69, Employed\" = \"B23001_075\",\n                 \"65 to 69, Unemployed\" = \"B23001_076\",\n                 \"70 to 74\" = \"B23001_078\",\n                 \"70 to 74, Employed\" = \"B23001_080\",\n                 \"70 to 74, Unemployed\" = \"B23001_081\",\n                 \"75 and Over\" = \"B23001_083\",\n                 \"75 and Over, Employed\" = \"B23001_085\",\n                 \"75 and Over, Unemployed\" = \"B23001_086\"\n    ),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") %>% \n  mutate(gender = \"Male\")\n\nemployment_male <- employment_male %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa| , Iowa\"))\n\n# now for female employment\nemployment_female <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variable = c(\"Total Labor Force\" = \"B23001_001\",\n                 \"Total Labor Force, Female\" = \"B23001_088\",\n                 \"16 to 19\" = \"B23001_089\",\n                 \"16 to 19, In Armed Forces\" = \"B23001_091\",\n                 \"16 to 19, Employed\" = \"B23001_093\",\n                 \"16 to 19, Unemployed\" = \"B23001_094\",\n                 \"20 to 21\" = \"B23001_096\",\n                 \"20 to 21, In Armed Forces\" = \"B23001_098\",\n                 \"20 to 21, Employed\" = \"B23001_100\",\n                 \"20 to 21, Unemployed\" = \"B23001_101\",\n                 \"22 to 24\" = \"B23001_103\",\n                 \"22 to 24, In Armed Forces\" = \"B23001_105\",\n                 \"22 to 24, Employed\" = \"B23001_107\",\n                 \"22 to 24, Unemployed\" = \"B23001_108\",\n                 \"25 to 29\" = \"B23001_110\",\n                 \"25 to 29, In Armed Forces\" = \"B23001_112\",\n                 \"25 to 29, Employed\" = \"B23001_114\",\n                 \"25 to 29, Unemployed\" = \"B23001_115\",\n                 \"30 to 34\" = \"B23001_117\",\n                 \"30 to 34, In Armed Forces\" = \"B23001_119\",\n                 \"30 to 34, Employed\" = \"B23001_121\",\n                 \"30 to 34, Unemployed\" = \"B23001_122\",\n                 \"35 to 44\" = \"B23001_124\",\n                 \"35 to 44, In Armed Forces\" = \"B23001_126\",\n                 \"35 to 44, Employed\" = \"B23001_128\",\n                 \"35 to 44, Unemployed\" = \"B23001_129\",\n                 \"45 to 54\" = \"B23001_131\",\n                 \"45 to 54, In Armed Forces\" = \"B23001_133\",\n                 \"45 to 54, Employed\" = \"B23001_135\",\n                 \"45 to 54, Unemployed\" = \"B23001_136\",\n                 \"55 to 59\" = \"B23001_138\",\n                 \"55 to 59, In Armed Forces\" = \"B23001_140\",\n                 \"55 to 59, Employed\" = \"B23001_142\",\n                 \"55 to 59, Unemployed\" = \"B23001_143\",\n                 \"60 to 61\" = \"B23001_145\",\n                 \"60 to 61, In Armed Forces\" = \"B23001_147\",\n                 \"60 to 61, Employed\" = \"B23001_149\",\n                 \"60 to 61, Unemployed\" = \"B23001_150\",\n                 \"62 to 64\" = \"B23001_152\",\n                 \"62 to 64, In Armed Forces\" = \"B23001_154\",\n                 \"62 to 64, Employed\" = \"B23001_156\",\n                 \"62 to 64, Unemployed\" = \"B23001_157\",\n                 \"65 to 69\" = \"B23001_159\",\n                 \"65 to 69, Employed\" = \"B23001_161\",\n                 \"65 to 69, Unemployed\" = \"B23001_162\",\n                 \"70 to 74\" = \"B23001_164\",\n                 \"70 to 74, Employed\" = \"B23001_166\",\n                 \"70 to 74, Unemployed\" = \"B23001_167\",\n                 \"75 and Over\" = \"B23001_169\",\n                 \"75 and Over, Employed\" = \"B23001_171\",\n                 \"75 and Over, Unemployed\" = \"B23001_172\"\n    ),\n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") %>% \n  mutate(gender = \"Female\")\n\nemployment_female <- employment_female %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa| , Iowa\"))\n\n##########################################################################################################\n\nemployment_female\nemployment_male\n# need to combine these data frames and do further transformations\n# should change to percents to standardize and account for different population sizes\n\n##########################################################################################################\n```\n:::\n\n\n### Commuting Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Commuting ##\n###############\n\n# pct population traveling outside of city for work\ntravel <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variable = c(\"total\" = \"B08008_001\",\n                 \"travel\" = \"B08008_004\"), \n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") %>% \n  mutate(prc_travel = travelE / totalE,\n         travel_moe = (moe_ratio(travelE, totalE, travelM, totalM))) %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\"))\n\n\n# rename variables \ntravel <- travel %>% \n  rename(Year = year) %>% \n  rename(\"Total Workforce\" = totalE) %>% \n  rename(\"Workforce Commuting\" = travelE) %>% \n  rename(\"Percent Workforce Commuting\" = prc_travel) %>% \n  rename(\"moe\" = travel_moe) %>% \n  rename(\"Total Workforce moe\" = totalM) %>% \n  rename(\"Workforce Commuting moe\" = travelM)\n\n# create a .csv file for travel data\ntravel %>% write.csv(file = \"commuting_data.csv\")\n```\n:::\n\n\n### Income Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Income ##\n############\n\n# median household income = B19013_001\n\n# pct population traveling outside of city for work\nincome <- map_dfr(years, ~{\n  get_acs(\n    geography = \"place\",\n    variable = c(\"median_income\"=\"B19013_001\"), \n    state = \"IA\",\n    year = .x,\n    survey = \"acs5\",\n    output = \"wide\"\n  )\n}, .id = \"year\") %>% \n  mutate(NAME = str_remove(NAME, \" city, Iowa|, Iowa\"))\n\n\n# figure out how income is changing\n# calculate percent income change\nincome <- income %>% \n  group_by(NAME) %>% \n  mutate(prc_change = (median_incomeE - lag(median_incomeE)) / lag(median_incomeE)) %>%\n  mutate(income_change_label = ifelse(prc_change > 0, \"Positive\", \"Negative\"))\n\n# rename variables \nincome <- income %>% \n  rename(Year = year) %>% \n  rename(\"Median Income\" = median_incomeE) %>% \n  rename(\"Percent Median Income Change\" = prc_change) %>% \n  rename(Label = income_change_label) %>% \n  rename(\"Median Income moe\" = median_incomeM) \n\n# create a .csv file for income data\nincome %>% write.csv(file = \"income_data.csv\")\n```\n:::\n",
    "supporting": [
      "Week_8_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
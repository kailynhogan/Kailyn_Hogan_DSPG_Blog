[
  {
    "objectID": "posts/Week_1/Week_1.html",
    "href": "posts/Week_1/Week_1.html",
    "title": "Week One",
    "section": "",
    "text": "The priority for week one of Data Science for the Public Good was DataCamp training. I completed the following list of DataCamp courses this week.\n\n\n\nAI Fundamentals\nGitHub Concepts\nR Programming Assessment\nUnderstanding and Interpreting Data Assessment\nIntroduction to R\nIntroduction to the Tidyverse"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kailyn Hogan’s DSPG Blog",
    "section": "",
    "text": "Team Blog: Week Four\n\n\n\n\n\n\n\nWeek Four\n\n\n\n\n\n\n\n\n\n\n\nJun 9, 2023\n\n\nKailyn Hogan\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek Four\n\n\n\n\n\n\n\nWeek Four\n\n\n\n\n\n\n\n\n\n\n\nJun 9, 2023\n\n\nKailyn Hogan\n\n\n\n\n\n\n  \n\n\n\n\nWeek Three\n\n\n\n\n\n\n\nWeek Three\n\n\n\n\n\n\n\n\n\n\n\nJun 2, 2023\n\n\nKailyn Hogan\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek Two\n\n\n\n\n\n\n\nWeek Two\n\n\n\n\n\n\n\n\n\n\n\nMay 26, 2023\n\n\nKailyn Hogan\n\n\n\n\n\n\n  \n\n\n\n\nWeek One\n\n\n\n\n\n\n\nWeek One\n\n\n\n\n\n\n\n\n\n\n\nMay 19, 2023\n\n\nKailyn Hogan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/Week_2/Week_2.html",
    "href": "posts/Week_2/Week_2.html",
    "title": "Week Two",
    "section": "",
    "text": "This week we were introduced to the TidyCensus package via the 2023 webinar series Analyzing 2017-2021 ACS Data in R and Python by Kyle Walker, Associate Professor at Texas Christian University and R developer.\nWe watched the first two videos in the webinar series: Working with the 2021 American Community Survey with R and Tidycensus and Mapping and spatial analysis with ACS data in R.\nI created the following plots using the information I learned from the webinars and previous knowledge:\n\nlibrary(tidycensus)\nlibrary(tidyverse)\n\nWarning: package 'tidyverse' was built under R version 4.1.3\n\n\nWarning: package 'ggplot2' was built under R version 4.1.3\n\n\nWarning: package 'tibble' was built under R version 4.1.3\n\n\nWarning: package 'tidyr' was built under R version 4.1.3\n\n\nWarning: package 'readr' was built under R version 4.1.3\n\n\nWarning: package 'purrr' was built under R version 4.1.3\n\n\nWarning: package 'dplyr' was built under R version 4.1.3\n\n\nWarning: package 'stringr' was built under R version 4.1.3\n\n\nWarning: package 'forcats' was built under R version 4.1.3\n\n\nWarning: package 'lubridate' was built under R version 4.1.3\n\n\n-- Attaching core tidyverse packages ------------------------ tidyverse 2.0.0 --\nv dplyr     1.1.2     v readr     2.1.4\nv forcats   1.0.0     v stringr   1.5.0\nv ggplot2   3.4.2     v tibble    3.2.1\nv lubridate 1.9.2     v tidyr     1.3.0\nv purrr     1.0.1     \n-- Conflicts ------------------------------------------ tidyverse_conflicts() --\nx dplyr::filter() masks stats::filter()\nx dplyr::lag()    masks stats::lag()\ni Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nlibrary(ggthemes)\nlibrary(scales)\n\nWarning: package 'scales' was built under R version 4.1.3\n\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\n\n##ONWER VS. RENTER OCCUPIED FOR EACH CITY\nown_iowa <- get_decennial(geography = \"place\",\n                          state = \"IA\",\n                          year = 2010,\n                          output = \"wide\",\n                          variable = c(\"H017003\",\"H017004\",\"H017005\",\"H017006\",\"H017007\",\"H017008\",\"H017009\",\"H017010\",\"H017011\")) %>% \n  mutate(tenure = \"Owner\") %>% \n  rename(fifteentotwentyfour = H017003, twentyfivetothirtyfour = H017004, thirtyfivetofourtyfour = H017005, fourtyfivetofiftyfour = H017006, fiftyfivetofiftynine = H017007, sixtytosixtyfour = H017008, sixtyfivetoseventyfour = H017009, seventyfivetoeightyfour = H017010, overeightyfive = H017011)\n\nGetting data from the 2010 decennial Census\n\n\nUsing Census Summary File 1\n\n## Getting data from the 2010 decennial Census\n## Using Census Summary File 1\nrent_iowa <- get_decennial(geography = \"place\",\n                           state = \"IA\",\n                           year = 2010,\n                           output = \"wide\",\n                           variable = c(\"H017013\",\"H017014\", \"H017015\", \"H017016\", \"H017017\",\"H017018\",\"H017019\", \"H017020\",\"H017021\")) %>% \n  mutate(tenure = \"Renter\") %>% \n  rename(fifteentotwentyfour = H017013, twentyfivetothirtyfour = H017014, thirtyfivetofourtyfour = H017015, fourtyfivetofiftyfour = H017016, fiftyfivetofiftynine = H017017, sixtytosixtyfour = H017018, sixtyfivetoseventyfour = H017019, seventyfivetoeightyfour = H017020, overeightyfive = H017021)\n\nGetting data from the 2010 decennial Census\nUsing Census Summary File 1\n\n## Getting data from the 2010 decennial Census\n## Using Census Summary File 1\niowa <- rent_iowa %>% \n  bind_rows(own_iowa)%>% \n  pivot_longer(-c(NAME, GEOID, tenure),\n               names_to = \"agegroups\",\n               values_to = \"count\")\n\n###plots for grundy, independence and new hampton for age break downs by housing tenure\niowa %>% \n  filter(NAME == \"New Hampton city, Iowa\") %>% \n  mutate(agegroups = fct_relevel(agegroups, c(\"fifteentotwentyfour\", \"twentyfivetothirtyfour\",\"thirtyfivetofourtyfour\",\"fourtyfivetofiftyfour\",\"fiftyfivetofiftynine\",\"sixtytosixtyfour\",\"sixtyfivetoseventyfour\",\"seventyfivetoeightyfour\",\"overeightyfive\"))) %>% \n  ggplot(aes(x = agegroups, y = if_else(tenure == \"Renter\", count, -count))) +\n  geom_bar(aes(fill = tenure), stat = \"identity\") +\n  geom_text(aes(x = agegroups, y = if_else(tenure == \"Renter\", count +10, -count - 12), label = scales::comma(count))) +\n  coord_flip()+\n  scale_x_discrete(labels = c(\"15 to 24\", \"25 to 34\", \"35 to 44\", \"45 to 54\", \"55 to 59\", \"60 to 64\", \"65 to 74\", \"75 to 84\", \"85 and Older\")) +\n  scale_y_continuous(label = abs)+\n  labs(x = \"\",\n       y = \"Population\",\n       fill = \"\",\n       title = \"Population in New Hampton, IA \\nby Age and Tenure\",\n       subtitle = \"2010 Decennial Census\") +\n  theme_fivethirtyeight()+\n  theme(legend.position = \"bottom\") +\n  scale_fill_wsj()\n\n\n\niowa %>% \n  filter(NAME == \"Grundy Center city, Iowa\") %>% \n  mutate(agegroups = fct_relevel(agegroups, c(\"fifteentotwentyfour\", \"twentyfivetothirtyfour\",\"thirtyfivetofourtyfour\",\"fourtyfivetofiftyfour\",\"fiftyfivetofiftynine\",\"sixtytosixtyfour\",\"sixtyfivetoseventyfour\",\"seventyfivetoeightyfour\",\"overeightyfive\"))) %>% \n  ggplot(aes(x = agegroups, y = if_else(tenure == \"Renter\", count, -count))) +\n  geom_bar(aes(fill = tenure), stat = \"identity\") +\n  geom_text(aes(x = agegroups, y = if_else(tenure == \"Renter\", count +5, -count - 8), label = scales::comma(count))) +\n  coord_flip()+\n  scale_x_discrete(labels = c(\"15 to 24\", \"25 to 34\", \"35 to 44\", \"45 to 54\", \"55 to 59\", \"60 to 64\", \"65 to 74\", \"75 to 84\", \"85 and Older\")) +\n  scale_y_continuous(label = abs)+\n  labs(x = \"\",\n       y = \"Population\",\n       fill = \"\",\n       title = \"Population in Grundy Center, IA \\nby Age and Tenure\",\n       subtitle = \"2010 Decennial Census\") +\n  theme_fivethirtyeight()+\n  theme(legend.position = \"bottom\") +\n  scale_fill_wsj()\n\n\n\niowa %>% \n  filter(NAME == \"Independence city, Iowa\") %>% \n  mutate(agegroups = fct_relevel(agegroups, c(\"fifteentotwentyfour\", \"twentyfivetothirtyfour\",\"thirtyfivetofourtyfour\",\"fourtyfivetofiftyfour\",\"fiftyfivetofiftynine\",\"sixtytosixtyfour\",\"sixtyfivetoseventyfour\",\"seventyfivetoeightyfour\",\"overeightyfive\"))) %>% \n  ggplot(aes(x = agegroups, y = if_else(tenure == \"Renter\", count, -count))) +\n  geom_bar(aes(fill = tenure), stat = \"identity\") +\n  geom_text(aes(x = agegroups, y = if_else(tenure == \"Renter\", count +12, -count - 15), label = scales::comma(count))) +\n  coord_flip()+\n  scale_x_discrete(labels = c(\"15 to 24\", \"25 to 34\", \"35 to 44\", \"45 to 54\", \"55 to 59\", \"60 to 64\", \"65 to 74\", \"75 to 84\", \"85 and Older\")) +\n  scale_y_continuous(label = abs)+\n  labs(x = \"\",\n       y = \"Population\",\n       fill = \"\",\n       title = \"Population in Independence, IA by \\nAge and Tenure\",\n       subtitle = \"2010 Decennial Census\") +\n  theme_fivethirtyeight()+\n  theme(legend.position = \"bottom\") +\n  scale_fill_wsj()\n\n\n\n\n\n##MEDIAN AGE\n\nmedage <- c(\"medage\" = \"B01002_001\")\n\ngrundy <- get_acs(geography = \"place\",\n              state = \"IA\",\n              variable = medage,\n              year = 2021,\n              output = \"tidy\") %>% \n  filter(NAME == \"Grundy Center city, Iowa\") %>% \n  mutate(year = 2021) \n\nGetting data from the 2017-2021 5-year ACS\n\n## Getting data from the 2016-2020 5-year ACS\ninde <- get_acs(geography = \"place\",\n                state = \"IA\",\n                variable = medage,\n                year = 2021,\n                output = \"tidy\") %>% \n  filter(NAME == \"Independence city, Iowa\") %>% \n  mutate(year = 2021)\n\nGetting data from the 2017-2021 5-year ACS\n\nnew <- get_acs(geography = \"place\",\n                state = \"IA\",\n                variable = medage,\n                year = 2021,\n                output = \"tidy\") %>% \n  filter(NAME == \"New Hampton city, Iowa\") %>% \n  mutate(year = 2021)\n\nGetting data from the 2017-2021 5-year ACS\n\n## Getting data from the 2016-2020 5-year ACS\nia <- get_acs(geography = \"state\",\n              state = \"IA\",\n              variable = medage,\n              year = 2021,\n              output = \"tidy\") %>% \n  mutate(year = 2021)\n\nGetting data from the 2017-2021 5-year ACS\n\n## Getting data from the 2016-2020 5-year ACS\nmedage16_20 <- grundy %>% \n  bind_rows(ia,inde, new) %>% \n  mutate(upper = estimate + moe,\n         lower = estimate - moe)\n\nmedage16_20 %>% \n  ggplot() +\n  geom_pointrange(aes(x = NAME, y = estimate, ymin = lower, ymax = upper))+\n  geom_line(aes(x = NAME, y = estimate))+\n  coord_flip()+\n  geom_text(aes(x = NAME, y = estimate, label = estimate), hjust = .5, vjust = -.8)+\n  scale_x_discrete(limits = c(\"Grundy Center city, Iowa\", \"Independence city, Iowa\", \"New Hampton city, Iowa\", \"Iowa\"),labels = c(\"Grundy Center\",\"Independence\",\"New Hampton\",\"Iowa\"))+\n  labs(title = \"Median Age of the Population\",\n       subtitle = \"Data aquired from 2017-2021 5-year ACS estimates.\",\n       x = \"\",\n       y = \" \",)+\n  theme_fivethirtyeight()\n\n`geom_line()`: Each group consists of only one observation.\ni Do you need to adjust the group aesthetic?\n\n\n\n\n\n\n#PERCENT FOREIGN BORN, NON-CITIZENS\nforeign <- c(\"foreign\" = \"B05012_003\",\n             \"pop\" = \"B05012_001\")\n\nforeign <- get_acs(geography = \"place\",\n                   state = \"IA\",\n                   year = 2021,\n                   variable = foreign,\n                   output = \"wide\") %>% \n  filter(NAME %in% c(\"Grundy Center city, Iowa\", \"Independence city, Iowa\", \"New Hampton city, Iowa\"))\n\nGetting data from the 2017-2021 5-year ACS\n\n## Getting data from the 2017-2021 5-year ACS\nforeign <- foreign %>% \n  mutate(pct_foreign = foreignE/popE,\n         pct_foreign_moe = moe_prop(foreignE, popE, foreignM, popM))\n\nforeign %>% \n  ggplot() +\n  geom_pointrange(aes(x = NAME, y = pct_foreign, ymin = pct_foreign - pct_foreign_moe, ymax = pct_foreign + pct_foreign_moe ))+\n  coord_flip() +\n  scale_y_continuous(label = scales::percent) +\n  theme_fivethirtyeight() +\n  labs( x = \" \",\n        y = \"Pct Foreign\",\n        title = \"Percent of Foreign-Born, Non-Citzen\",\n        subtitle = \"2017-2021 5-Year ACS Estimates\")+\n  scale_x_discrete(labels = c(\"Grundy Center\", \"Independence\", \"New Hampton\"))+\n  geom_text(aes(x = NAME, y = pct_foreign, label = percent(pct_foreign)), hjust = .5, vjust = -.8)\n\n\n\n\n\n##MEDIAN INCOME BY HOUSEHOLD\ngrundy_acs <- get_acs(state = \"IA\", \n                       geography = \"place\",\n                       year = 2021,\n                       variable = c(med_house = \"B19013_001\"),\n                       output = \"tidy\") %>% \n  filter(NAME == \"Grundy Center city, Iowa\")\n\nGetting data from the 2017-2021 5-year ACS\n\ninde_acs <- get_acs(state = \"IA\", \n                      geography = \"place\",\n                      year = 2021,\n                      variable = c(med_house = \"B19013_001\"),\n                      output = \"tidy\") %>% \n  filter(NAME == \"Independence city, Iowa\")\n\nGetting data from the 2017-2021 5-year ACS\n\nnew_acs <- get_acs(state = \"IA\", \n                      geography = \"place\",\n                      year = 2021,\n                      variable = c(med_house = \"B19013_001\"),\n                      output = \"tidy\") %>% \n  filter(NAME == \"New Hampton city, Iowa\")\n\nGetting data from the 2017-2021 5-year ACS\n\n## Getting data from the 2016-2020 5-year ACS\nmed_house <- grundy_acs %>% \n  bind_rows(inde_acs,new_acs)\nmed_house %>%  \n  ggplot(aes(x = NAME, y = estimate))+\n  geom_pointrange(aes(ymin = estimate - moe, ymax = estimate +moe))+\n  geom_text(aes(label = scales::dollar(estimate)), hjust = -.2)+\n  scale_x_discrete(labels = c(\"Grundy Center\", \"Independence\", \"New Hampton\"))+\n  scale_y_continuous(label = scales::dollar)+\n  labs(y = \"\",\n       title = \"Estimated Median Income by Household\",\n       subtitle = \"Data acquired from 2017-2021 5-year ACS estimates.\")+\n  theme_fivethirtyeight()\n\n\n\n\n\n# % LABOR FORCE UNEMPLOYED\ngrundy_un <- get_acs(state = \"IA\", \n                      geography = \"place\",\n                      year = 2021,\n                      variable = c(\"total\" = \"B23025_003\",\n                                   \"unemployed\" = \"B23025_005\"),\n                      output = \"wide\") %>% \n  filter(NAME == \"Grundy Center city, Iowa\") %>% \n  mutate(pct = unemployedE / totalE,\n         moe = moe_ratio(unemployedE, totalE, unemployedM, totalM))\n\nGetting data from the 2017-2021 5-year ACS\n\ninde_un <- get_acs(state = \"IA\", \n                     geography = \"place\",\n                     year = 2021,\n                     variable = c(\"total\" = \"B23025_003\",\n                                  \"unemployed\" = \"B23025_005\"),\n                     output = \"wide\") %>% \n  filter(NAME == \"Independence city, Iowa\") %>% \n  mutate(pct = unemployedE / totalE,\n         moe = moe_ratio(unemployedE, totalE, unemployedM, totalM))\n\nGetting data from the 2017-2021 5-year ACS\n\nnew_un <- get_acs(state = \"IA\", \n                     geography = \"place\",\n                     year = 2021,\n                     variable = c(\"total\" = \"B23025_003\",\n                                  \"unemployed\" = \"B23025_005\"),\n                     output = \"wide\") %>% \n  filter(NAME == \"New Hampton city, Iowa\") %>% \n  mutate(pct = unemployedE / totalE,\n         moe = moe_ratio(unemployedE, totalE, unemployedM, totalM))\n\nGetting data from the 2017-2021 5-year ACS\n\n## Getting data from the 2016-2020 5-year ACS\npct_un <- grundy_un %>% \n  bind_rows(inde_un,new_un)\npct_un %>%  \n  ggplot(aes(x = NAME, y = pct))+\n  geom_pointrange(aes(ymin = pct - moe, ymax = pct +moe))+\n  geom_text(aes(label = scales::percent(pct)), hjust = -.2)+\n  scale_y_continuous(label = scales::percent)+\n  scale_x_discrete(labels = c(\"Grundy Center\", \"Independence\", \"New Hampton\"))+\n  labs(y = \"\",\n       x = \"\",\n       title = \"Estimated % of Population Unemployed\",\n       subtitle = \"Data acquired from 2017-2021 5-year ACS estimates.\")+\n  theme_fivethirtyeight()\n\n\n\n\nWe also had our first client meeting for the Housing and AI project this week on Thursday, May 25th. We gained clarity for which direction we should be heading in the project from our stakeholders.\ngit_add\ngit_commit\ngit_push"
  },
  {
    "objectID": "posts/Week_3/Week_3.html",
    "href": "posts/Week_3/Week_3.html",
    "title": "Kailyn Hogan's DSPG Blog",
    "section": "",
    "text": "title: \"Welcome To My Blog\"\nauthor: \"Tristan O'Malley\"\ndate: \"2023-05-28\"\ncategories: [news]\n---"
  },
  {
    "objectID": "posts/Week_3/Week_3.html#datacamp-trainings",
    "href": "posts/Week_3/Week_3.html#datacamp-trainings",
    "title": "Kailyn Hogan's DSPG Blog",
    "section": "DataCamp Trainings",
    "text": "DataCamp Trainings\n\nIntermediate R\nWeb Scraping in R\n\nI have also created an R Markdown file to document my web scraping practice.\nI did a quick Google search for a web scraper for Beacon before I attempted it myself, and I found a GitHub page dedicated to one:\nhttps://github.com/openaddresses/machine/issues/580\nI am not sure it is relevant to the data I am trying to scrape from Beacon.\nI also learned how to create a quarto blog this week!\n\nAI Modeling\nTo better understand the AI model my group is trying to create, I am watching the following YouTube videos:\n\nhttps://www.youtube.com/watch?v=19LQRx78QVU&list=PLgNJO2hghbmiXg5d4X8DURJP9yv9pgjIu&index=1&ab_channel=NicholasRenotte\nhttps://www.youtube.com/watch?v=jztwpsIzEGc&ab_channel=NicholasRenotte"
  },
  {
    "objectID": "posts/Week_3/Week_Three.html",
    "href": "posts/Week_3/Week_Three.html",
    "title": "Week Three",
    "section": "",
    "text": "This week my team has been trying to gather resources to use in our AI model. We are trying to scrape data from multiple different sources including Beacon, Vanguard, and Trulia to compile photos and train our AI model.\nI have been learning how to web scrape, and I have completed the following DataCamp trainings:\n\n\n\nIntermediate R\nWeb Scraping in R\n\nI have also created an R Markdown file to document my web scraping practice.\nI did a quick Google search for a web scraper for Beacon before I attempted it myself, and I found a GitHub page dedicated to one:\nhttps://github.com/openaddresses/machine/issues/580\nI am not sure it is relevant to the data I am trying to scrape from Beacon.\nI also learned how to create a quarto blog this week!\n\n\n\nTo better understand the AI model my group is trying to create, I am watching the following YouTube videos:\n\nhttps://www.youtube.com/watch?v=19LQRx78QVU&list=PLgNJO2hghbmiXg5d4X8DURJP9yv9pgjIu&index=1&ab_channel=NicholasRenotte\nhttps://www.youtube.com/watch?v=jztwpsIzEGc&ab_channel=NicholasRenotte\n\n\n\n\n\n\n\nShowing the rating scale for the DSM housing project.\n\n\nI also gave the Morning Coffee Talk on Thursday this week over the Des Moines Housing Project I was a part of. The Des Moines Housing Project was conducted by czb, a firm located in Bath, Maine. I was hired as a student researcher for them this past spring, and I conducted housing surveys on roughly 6,000 properties in Southwestern Des Moines."
  },
  {
    "objectID": "posts/Week_4/Team Blog.html",
    "href": "posts/Week_4/Team Blog.html",
    "title": "Team Blog: Week Four",
    "section": "",
    "text": "This blog outlines where the Housing Team is at after week four of DSPG. We have made a lot of progress in the past four weeks, and we are excited to share it with you!\n\n\n\n\n\n\n\n\n\n\nhuh I can’t find the document that had the description of our project in it.\n\n\n\n\nGenerate Google Street View urls for Slater, Independence, Grundy Center, and New Hampton\nScrape available housing data for Slater, Independence, Grundy Center, and New Hampton\n\nZillow\nRealtors.com\nBeacon\nVanguard\n\nCreate an AI model\n\nwhat else do we have for goals and objectives\n\n\n\nWe have been making good progress to complete the goals and objectives we outlined above. Since the beginning of the Data Science for the Public Good Program, we have been expanding our knowledge of data science, particularly in areas that relate to this housing project. We have been learning and covering new concepts through DataCamp. We have also watched two webinars on TidyCensus training, as well as started creating AI Models to practice with.\n\n\n\nGitHub Concepts\nAI Fundamentals\nIntroduction to R\nIntermediate R\nIntroduction to the Tidyverse\nWeb Scraping in R\nIntroduction to Deep Learning with Keras\n\n\n\n\nOne of the first steps in our project was to explore the available demographic data in our selected cities and counties. We thought it valuable to understand the demographic data, and we have represented in the plots below:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe next step was creating an AI Model. We decided to create an AI Model early in the project before finishing the housing data collection so that we had a better understanding when it came to putting everything together. The AI Model below tests for vegetation in front of houses.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOn Tuesday this week, the entire DSPG program went to Slater to practice data collection in person. The housing group took this as an opportunity to collect some housing photos on the ground to use in our AI Model later on.\nDo we have photos to use here?\n\n\n\nWe are getting the majority of our photos for the AI to use from Google Street View. Google has an API key that you can use to generate an image for a specific address. We spent the first half of this week pulling addresses from each of our cities and creating URLs to pull the images from Google Street View.\nWe ran into a couple of problems when doing this, the biggest of which is displayed in the images below. Because we are working with cities in rural areas, there is not Google Street View images available for every street in our cities.\n\n\n\nGoogle Street View information for Grundy Center, Iowa. For reference, population was 2,811 as of 2023.\n\n\n\n\n\nGoogle Street View information for Slater, Iowa. For reference, population was 1,639 as of 2023.\n\n\n\n\n\nGoogle Street View information for Independence, Iowa. For reference, population was 6,307 as of 2023.\n\n\n\n\n\nGoogle Street View information for New Hampton, Iowa. For reference, population was 3,368 as of 2023.\n\n\nDo we have more photos to use here?\n\n\n\nOnce we were finished collecting addresses and generating URLs, we moved on to scraping the web for more images. We decided to grab images from Zillow, Realtors.com, and the county assessor pages for our cities. We were able to successfully scrape images from Zillow this week.\ninsert images of web scraping progress after today"
  },
  {
    "objectID": "posts/Week_4/Week_4.html",
    "href": "posts/Week_4/Week_4.html",
    "title": "Week Four",
    "section": "",
    "text": "Introduction to Deep Learning with Keras"
  }
]